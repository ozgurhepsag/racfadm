/*%NOCOMMENT====================* REXX *==============================*/
/*  PURPOSE:  RACFADM - General resources - List classes (Option 4)   */
/*--------------------------------------------------------------------*/
/* FLG  YYMhDD  USERID   DESCRIPTION                                  */
/* ---  ------  -------  -------------------------------------------- */
/* @B4  200430  RACFA    Chg tbla to tablea, moved def. var. up top   */
/* @B3  200429  RACFA    Re-arranged variables (General, Mgmt, TSO)   */
/* @B2  200424  RACFA    Move DDNAME at top, standardize/del dups     */
/* @B1  200423  RACFA    Move PARSE REXXPGM name up above IF SETMTRAC */
/* @AZ  200422  RACFA    Ensure the REXX program name is 8 chars      */
/* @AY  200422  RACFA    Use variable REXXPGM in log msg              */
/* @AX  200413  RACFA    Chg TRACEing to only display banner (P=Pgms) */
/* @AW  200412  RACFA    Chg TRACE to allow 'L'abels or 'R'esults     */
/* @AV  200407  RACFA    EXCMD removed 'else msg_var = 1 to msg.0'    */
/* @AU  200402  RACFA    Chg LRECL=132 to LRECL=80                    */
/* @AT  200401  RACFA    Chged edit macro RACFLOGE to RACFEMAC        */
/* @AS  200401  RACFA    VIEW/EDIT use edit macro, to turn off HILITE */
/* @AR  200330  RACFA    Allow point-n-shoot sort ascending/descending*/
/* @AQ  200324  RACFA    Allow both display/logging of RACF commands  */
/* @AP  200324  RACFA    Allow logging RACF commands to ISPF Log file */
/* @AO  200303  RACFA    Chg 'RC/Ret_code' to 'cmd_rc' after EXCMD    */
/* @AN  200303  RACFA    Chg 'RL class ALL' to 'RL class * ALL'       */
/* @AM  200303  RACFA    Chk RC 'RL cls prms', if RC>0 then 'RL cls'  */
/* @AL  200303  RACFA    Added line cmd 'L-List'                      */
/* @AK  200226  RACFA    Fix @AI chg, chg ret_code to cmd_rc          */
/* @AJ  200226  RACFA    Added 'CONTROL ERRORS RETURN'                */
/* @AI  200226  RACFA    Added 'Return Code =' when displaying cmd    */
/* @AH  200226  RACFA    Removed double quotes before/after cmd       */
/* @AG  200224  RACFA    Standardize quotes, chg single to double     */
/* @AF  200224  RACFA    Place panels at top of REXX in variables     */
/* @AE  200223  RACFA    Del 'address TSO "PROFILE MSGID"', not needed*/
/* @AD  200223  RACFA    Added primary command SORT                   */
/* @AC  200223  RACFA    Use dynamic area to display SELECT commands  */
/* @AB  200222  RACFA    Removed translating OPTA/B, not needed       */
/* @AA  200222  RACFA    Allow placing cursor on row and press ENTER  */
/* @A9  200221  RACFA    Added primary commands 'ONLY' and 'RESET'    */
/* @A8  200221  RACFA    Allow abbreviating the 'LOCATE' command      */
/* @A7  200221  RACFA    Make 'ADDRESS ISPEXEC' defualt, reduce code  */
/* @A6  200220  RACFA    Fixed displaying all RACF commands           */
/* @A5  200220  RACFA    Added SETMTRAC=YES, then TRACE R             */
/* @A4  200218  RACFA    Condense VGETs into one line                 */
/* @A3  200120  RACFA    Removed 'say msg.msg_var' in EXCMD procedure */
/* @A2  200119  RACFA    Standardized/reduced lines of code           */
/* @A1  200119  RACFA    Placed comment boxes above procedures        */
/* @A0  011229  NICORIZ  Created REXX, V2.1, www.rizzuto.it           */
/*====================================================================*/
PANEL27     = "RACFCLSR"   /* List classes (show, refresh) */ /* @AF */
PANELM2     = "RACFMSG2"   /* Display RACF command and RC  */ /* @AF */
EDITMACR    = "RACFEMAC"   /* Edit Macro, turn HILITE off  */ /* @AT */
TABLEA      = 'TA'RANDOM(0,99999)   /* Unique table name A */ /* @B4 */
DDNAME      = 'RACFA'RANDOM(0,999)  /* Unique ddname       */ /* @B2 */
parse source . . REXXPGM .                                    /* @B1 */
REXXPGM     = LEFT(REXXPGM,8)                                 /* @B1 */

ADDRESS ISPEXEC                                               /* @A7 */
  Arg class
  "CONTROL ERRORS RETURN"                                     /* @AJ */
  "VGET (SETGDISP SETMADMN SETMSHOW SETMTRAC) ASIS"           /* @B3 */
  If (SETMTRAC <> 'NO') then do                               /* @AW */
     Say "*"COPIES("-",70)"*"                                 /* @AW */
     Say "*"Center("Begin Program = "REXXPGM,70)"*"           /* @AW */
     Say "*"COPIES("-",70)"*"                                 /* @AW */
     if (SETMTRAC <> 'PROGRAMS') THEN                         /* @AX */
        interpret "Trace "SUBSTR(SETMTRAC,1,1)                /* @AW */
  end                                                         /* @AW */
  If (SETMADMN = "YES") then                                  /* @AC */
      SELCMDS = "ÝS¨Show,ÝL¨List,ÝR¨Refresh"                  /* @AL */
  else                                                        /* @AC */
      SELCMDS = "ÝS¨Show,ÝL¨List"                             /* @AL */

  rlv = SYSVAR('SYSLRACF')
  if (class = '') then DO                                     /* @A9 */
     call Select_class
     rc = display_table()                                     /* @A9 */
     "TBEND" tablea                                           /* @A9 */
  END                                                         /* @A9 */
  else
     call RACFCLSG class '**' 'YES' /*generic prof routine*/

  If (SETMTRAC <> 'NO') then do                               /* @AW */
     Say "*"COPIES("-",70)"*"                                 /* @AW */
     Say "*"Center("End Program = "REXXPGM,70)"*"             /* @AW */
     Say "*"COPIES("-",70)"*"                                 /* @AW */
  end                                                         /* @AW */
EXIT
/*--------------------------------------------------------------------*/
/*  Select class                                                      */
/*--------------------------------------------------------------------*/
SELECT_CLASS:
  seconds = time('S')
  "TBCREATE" tablea "KEYS(CLASS)",
                  "NAMES(ACTION) REPLACE NOWRITE"
  call get_act_class
RETURN
/*--------------------------------------------------------------------*/
/*  Display profile permits                                           */
/*--------------------------------------------------------------------*/
GET_ACT_CLASS:
  Scan = 'OFF'
  cmd  = "SETROPTS LIST"                                      /* @A6 */
  x = OUTTRAP('var.')
  address TSO cmd                                             /* @A6 */
  cmd_rc = rc                                                 /* @AI */
  x = OUTTRAP('OFF')
  if (SETMSHOW <> 'NO') then                                  /* @AP */
     call SHOWCMD                                             /* @A6 */
  Do i = 1 to var.0         /* Scan output */
     temp = var.i
     if (rlv > '1081') then  /* RACF 1.9 add blank */
        temp= ' 'temp
     Select
        when (substr(temp,2,16) = 'ACTIVE CLASSES =') then do
             scan   = 'ON'
             record = substr(temp,18,80)
             nwords = words(record)
             do t = 1 to nwords
                class = subword(record,t,1)
                if (class <> 'USER'),
                 & (class <> 'DATASET'),
                 & (class <> 'GROUP') then
                   "TBMOD" tablea
             end
        end
        when (substr(temp,2,25) = 'GENERIC',
             'PROFILE CLASSES =') then leave
        otherwise
          if (scan = 'ON') then do
             record = var.i
             nwords = words(record)
             do t = 1 to nwords
                class = subword(record,t,1)
                if (class <> 'USER'),
                 & (class <> 'DATASET'),
                 & (class <> 'GROUP') then
                   "TBMOD" tablea
             end
        end
     End  /* end_select */
  end /* do i */
RETURN
/*--------------------------------------------------------------------*/
/*  Profiles table display section                                    */
/*--------------------------------------------------------------------*/
DISPLAY_TABLE:
  opta     = ' '
  sort     = 'CLASS,C,A'                                      /* @AD */
  sortclas = 'D'                                              /* @AR */
  "TBSORT " tablea "FIELDS("sort")"                           /* @AD */
  "TBTOP  " tablea
  "TBDISPL" tablea "PANEL("PANEL27")"                         /* @AF */
  reta = rc
  do while (reta < 8)   /* tablea */
     action = ''
     "CONTROL DISPLAY SAVE"
     xtdtop = ztdtop                                          /* @A9 */
     lclass = ''                                              /* @A9 */
     PARSE VAR ZCMD ZCMD PARM SEQ                             /* @AD */
     IF (SROW <> "") & (SROW <> 0) THEN                       /* @AA */
        IF (SROW > 0) THEN DO                                 /* @AA */
           "TBTOP " tablea                                    /* @AA */
           "TBSKIP" tablea "NUMBER("SROW")"                   /* @AA */
        END                                                   /* @AA */
     Select
        WHEN (ABBREV("SORT",ZCMD,1) = 1) THEN                 /* @AD */
             call sortseq 'CLASS'                             /* @AR */
        WHEN (ABBREV("LOCATE",ZCMD,1) = 1) THEN               /* @A8 */
             lclass = parm                                    /* @A8 */
        WHEN (ABBREV("ONLY",ZCMD,1) = 1) THEN DO              /* @A9 */
             find_str = translate(parm)                       /* @A9 */
             'tbtop ' tablea                                  /* @A9 */
             'tbskip' tablea                                  /* @A9 */
             do forever                                       /* @A9 */
                str = translate(class action)                 /* @A9 */
                if (pos(find_str,str) > 0) then nop           /* @A9 */
                else 'tbdelete' tablea                        /* @A9 */
                'tbskip' tablea                               /* @A9 */
                if (rc > 0) then do                           /* @A9 */
                   'tbtop' tablea                             /* @A9 */
                   leave                                      /* @A9 */
                end                                           /* @A9 */
             end                                              /* @A9 */
        END                                                   /* @A9 */
        WHEN (ABBREV("RESET",ZCMD,1) = 1) THEN DO             /* @A9 */
             call select_class                                /* @A9 */
             sort     = 'CLASS,C,A'                           /* @AD */
             sortclas = 'D'                                   /* @AR */
             xtdtop   = 1                                     /* @A9 */
        END                                                   /* @A9 */
        OTHERWISE NOP                                         /* @A8 */
     End
     Select
        when (opta = 'L') then call lisp                      /* @AL */
        when (opta = 'R') then call REFRESH
        when (opta = 'S') then   /* call generic */
             call RACFCLSG class '**' 'YES'
        otherwise nop
     End
     Do while (reta = 4)   /* process multi selection */
        "CONTROL DISPLAY RESTORE"
        "TBDISPL" tablea
        reta = rc
        "CONTROL DISPLAY SAVE"
        Select
           when (opta = 'L') then call lisp                   /* @AL */
           when (opta = 'R') then call REFRESH
           when (opta = 'S') then /* gen prof. routine */
                call RACFCLSG class '**' 'YES'
           otherwise nop
        End
     end
     opta = ' '
     "TBSORT" tablea "FIELDS("sort")"
     "TBTOP " tablea
     if (lclass <> '') then do
        class = lclass
        "TBSARG" tablea "NEXT NAMECOND(CLASS,GE)"
        "TBSCAN" tablea "NOREAD"
     end
     else
        "TBSKIP" tablea "NUMBER("XTDTOP")"
     "CONTROL DISPLAY RESTORE"
     "TBDISPL" tablea "PANEL("PANEL27")"                      /* @AF */
     reta = rc
  end  /* Do while (reta < 8) */
RETURN 0
/*--------------------------------------------------------------------*/
/*  Define sort sequence, to allow point-n-shoot sorting (A/D)   @AR  */
/*--------------------------------------------------------------------*/
SORTSEQ:                                                      /* @AR */
  parse arg sortcol                                           /* @AR */
  INTERPRET "TMPSEQ = SORT"substr(SORTCOL,1,4)                /* @AR */
  select                                                      /* @AR */
     when (seq <> "") then do                                 /* @AR */
          if (seq = 'A') then                                 /* @AR */
             tmpseq = 'D'                                     /* @AR */
          else                                                /* @AR */
             tmpseq = 'A'                                     /* @AR */
          sort = sortcol',C,'seq                              /* @AR */
     end                                                      /* @AR */
     when (seq = ""),                                         /* @AR */
        & (tmpseq = 'A') then do                              /* @AR */
           sort   = sortcol',C,A'                             /* @AR */
           tmpseq = 'D'                                       /* @AR */
     end                                                      /* @AR */
     Otherwise do                                             /* @AR */
        sort   = sortcol',C,D'                                /* @AR */
        tmpseq = 'A'                                          /* @AR */
     end                                                      /* @AR */
  end                                                         /* @AR */
  INTERPRET "SORT"SUBSTR(SORTCOL,1,4)" = TMPSEQ"              /* @AR */
RETURN                                                        /* @AR */
/*--------------------------------------------------------------------*/
/*  Refresh class                                                     */
/*--------------------------------------------------------------------*/
REFRESH:
  msg    = 'You are about to refresh class 'class
  Sure_? = RACFMSGC(msg)
  if (sure_? = 'YES') then do
     call EXCMD "SETR RACLIST("class") REFRESH"
     if (cmd_rc <> 0) then                                    /* @AO */
        call racfmsgs "ERR10" /* CMD FAILED */
     else do
        action = '*REFRESHED'
        "TBMOD" tablea
     end
  end
RETURN
/*--------------------------------------------------------------------*/
/*  Exec command                                                      */
/*--------------------------------------------------------------------*/
EXCMD:
  signal off error
  arg cmd
  x = OUTTRAP('msg.')
  address TSO cmd                                             /* @AH */
  cmd_rc = rc
  x = OUTTRAP('OFF')
  if (SETMSHOW <> 'NO') then                                  /* @AP */
     call SHOWCMD                                             /* @A6 */
  if (subword(msg.1,1,1)= 'ICH11009I') |,
     (subword(msg.1,1,1)= 'ICH10006I') |,
     (subword(msg.1,1,1)= 'ICH06011I') then
     raclist = 'YES'
RETURN
/*--------------------------------------------------------------------*/
/*  List class                                                   @AL  */
/*--------------------------------------------------------------------*/
LISP:
  cmd     = "RL "CLASS" * ALL"                                /* @AN */
  X = OUTTRAP("CMDREC.")
  ADDRESS TSO cmd
  cmd_rc = rc
  X = OUTTRAP("OFF")
  if (SETMSHOW <> 'NO') then                                  /* @AP */
     call SHOWCMD
  if (cmd_rc > 0) then do    /* Remove parms */               /* @AM */
     cmd     = "RL "CLASS" *"                                 /* @AN */
     X = OUTTRAP("CMDREC.")                                   /* @AM */
     ADDRESS TSO cmd                                          /* @AM */
     cmd_rc = rc                                              /* @AM */
     X = OUTTRAP("OFF")                                       /* @AM */
     if (SETMSHOW <> 'NO') then                               /* @AP */
        call SHOWCMD                                          /* @AM */
  end                                                         /* @AM */
  ADDRESS TSO "ALLOC F("DDNAME") NEW REUSE",
              "LRECL(80) BLKSIZE(0) RECFM(F B)",              /* @AU */
              "UNIT(VIO) SPACE(1 5) CYLINDERS"
  ADDRESS TSO "EXECIO * DISKW "DDNAME" (STEM CMDREC. FINIS"
  "LMINIT DATAID(CMDDATID) DDNAME("DDNAME")"
  SELECT
     WHEN (SETGDISP = "VIEW") THEN
          "VIEW DATAID("CMDDATID") MACRO("EDITMACR")"         /* @AS */
     WHEN (SETGDISP = "EDIT") THEN
          "EDIT DATAID("CMDDATID") MACRO("EDITMACR")"         /* @AS */
     OTHERWISE
          "BROWSE DATAID("CMDDATID")"
  END
  ADDRESS TSO "FREE FI("DDNAME")"
  DROP CMDREC.
  if (cmd_rc > 0) then                                        /* @AC */
     CALL racfmsgs "ERR10" /* Generic failure */              /* @AC */
RETURN
/*--------------------------------------------------------------------*/
/*  Display RACF command and return code                         @A6  */
/*--------------------------------------------------------------------*/
SHOWCMD:                                                      /* @A6 */
  IF (SETMSHOW = "BOTH") | (SETMSHOW = "DISPLAY") THEN DO     /* @AQ */
     PARSE VAR CMD MSG1 60 MSG2 121 MSG3                      /* @A6 */
     MSG4 = "Return code = "cmd_rc                            /* @AI */
     "ADDPOP ROW(6) COLUMN(4)"                                /* @AG */
     "DISPLAY PANEL("PANELM2")"                               /* @AF */
     "REMPOP"                                                 /* @AG */
  END                                                         /* @AP */
  IF (SETMSHOW = "BOTH") | (SETMSHOW = "LOG") THEN DO         /* @AQ */
     zerrsm = "RACFADM "REXXPGM" RC="cmd_rc                   /* @AY */
     zerrlm = cmd                                             /* @AP */
     'log msg(isrz003)'                                       /* @AP */
  END                                                         /* @AP */
RETURN                                                        /* @A6 */
