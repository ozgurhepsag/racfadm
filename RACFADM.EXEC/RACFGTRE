/*%NOCOMMENT====================* REXX *==============================*/
/*  PURPOSE:  RACFADM - GrpTree - Group tree report (Menu option 6)   */
/*--------------------------------------------------------------------*/
/* FLG  YYMMDD  USERID   DESCRIPTION                                  */
/* ---  ------  -------  -------------------------------------------- */
/* @A7  200417  RACFA    Free file when done using                    */
/* @A5  200417  RACFA    Chg edit macro, add code to del blank rows   */
/* @A4  200417  TRIDJK   When EDIT/VIEW, remove blank rows/lines      */
/* @A3  200417  RACFA    Removed 'enq(exclu)', not needed             */
/* @A2  200416  RACFA    Honor users setting on displaying of file    */
/* @A1  200416  RACFA    Increased size of SYSPRINT                   */
/* @A0  200416  TRIDJK   Created REXX program                         */
/*====================================================================*/
EDITMACR = "RACFEMAC"    /* Edit Macro, delete space lines */ /* @A5 */
DDNAME   = "RACFA"RANDOM(0,999)                               /* @A5 */

ADDRESS ISPEXEC
  "VGET (ERATRACE ERADISP) ASIS"                              /* @A2 */
  If (eratrace <> 'NO') then do
     parse source . . REXXPGM .
     Say "*"COPIES("-",70)"*"
     Say "*"Center("Begin Program = "REXXPGM,70)"*"
     Say "*"COPIES("-",70)"*"
     if (eratrace <> 'PROGRAMS') THEN
        interpret "Trace "SUBSTR(ERATRACE,1,1)
  end

Address TSO
  /*--------------------------------------------*/
  /*  Call ICHDSM00 for group tree report       */
  /*--------------------------------------------*/
  'alloc f(sysprint) new reuse unit(sysallda)',
         'space(1,1) tracks'
  'alloc f(sysut2)   new reuse unit(sysallda)',
         'space(20,50) cylinders',                            /* @A1 */
         'recfm(F B A) lrecl(133) blksize(0)'                 /* @A1 */
  'alloc f(sysin)    new reuse unit(sysallda)',
         'lrecl(80) blksize(0) recfm(f b)',
         'space(1,1) tracks'
  'newstack'
  queue 'LINECOUNT 0'
  queue 'FUNCTION RACGRP'
  queue
  'Execio * diskw sysin (finis'

  "call *(ichdsm00)"

  /*--------------------------------------------*/
  /*  Remove empty rows/lines and format report */
  /*--------------------------------------------*/
  'execio * diskr sysut2 (stem sysut2. finis'                 /* @A5 */
  'free  f(sysprint sysut2 sysin)'
  'delstack'

  K = 0                                                       /* @A5 */
  do J = 1 To sysut2.0                                        /* @A5 */
     parse var sysut2.j W1 W2 .                               /* @A5 */
     Select                                                   /* @A5 */
        when (W1 = '|') then iterate                          /* @A5 */
        when (W1 = ' ') then iterate                          /* @A5 */
        when (W1 = "1RACF") then                              /* @A5 */
             sysut2.J = ' 'substr(sysut2.J,2)                 /* @A5 */
        when (W2 = "R") then                                  /* @A5 */
             sysut2.J = ' 'strip(substr(sysut2.J,2))          /* @A5 */
        otherwise                                             /* @A5 */
             nop                                              /* @A5 */
     end                                                      /* @A5 */
     K = K + 1                                                /* @A5 */
     REC.K = sysut2.J                                         /* @A5 */
  end                                                         /* @A5 */
  rec.0 = K                                                   /* @A5 */
  drop sysut2.                                                /* @A5 */
                                                              /* @A5 */
  'alloc f('DDNAME')  new reuse unit(sysallda)',              /* @A5 */
         'space(20,50) cylinders',                            /* @A5 */
         'recfm(F B A) lrecl(133) blksize(0)'                 /* @A5 */
  'execio * diskw 'DDNAME' (stem rec. finis'                  /* @A5 */
  drop rec.                                                   /* @A5 */

Address ISPExec
  /*---------------------*/
  /*  Browse the report  */
  /*---------------------*/
  'lminit dataid(id) ddname('DDNAME')'                        /* @A5 */
  if (rc ^= 0) then do
     racfsmsg = 'Allocation error'
     racflmsg = 'LMINIT failed for 'DDNAME                    /* @A5 */
     'setmsg msg(racf001)'
     call Goodbye
  end
  SELECT                                                      /* @A2 */
     WHEN (ERADISP = "VIEW") THEN                             /* @A2 */
          "VIEW DATAID("ID") MACRO("EDITMACR")"               /* @A2 */
     WHEN (ERADISP = "EDIT") THEN                             /* @A2 */
          "EDIT DATAID("ID") MACRO("EDITMACR")"               /* @A2 */
     OTHERWISE                                                /* @A2 */
          "BROWSE DATAID("ID")"                               /* @A2 */
  END                                                         /* @A2 */
  'lmfree dataid('id')'
  Address TSO 'Free fi('DDNAME')'                             /* @A7 */
  call Goodbye
EXIT
/*--------------------------------------------------------------------*/
/*  If tracing is on, display flower box                              */
/*--------------------------------------------------------------------*/
GOODBYE:
  If (eratrace <> 'NO') then do
     Say "*"COPIES("-",70)"*"
     Say "*"Center("End Program = "REXXPGM,70)"*"
     Say "*"COPIES("-",70)"*"
  end
EXIT
