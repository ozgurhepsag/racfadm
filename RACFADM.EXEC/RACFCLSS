/*%NOCOMMENT====================* REXX *==============================*/
/*  PURPOSE:  RACFADM - General resources - Search classes            */
/*--------------------------------------------------------------------*/
/* FLG  YYMMDD  USERID   DESCRIPTION                                  */
/* ---  ------  -------  -------------------------------------------- */
/* @BY  200302  RACFA    Chk/honor 'Status Interval' for cls profiles */
/* @BX  200302  RACFA    Add SORT/LOCATE/ONLY/RESET for class profiles*/
/* @BW  200301  RACFA    Chk for 'NO ENTRIES MEET SEARCH CRITERIA'    */
/* @BU  200226  RACFA    Fix @AK chg, chg ret_code to cmd_rc          */
/* @AL  200226  RACFA    Added 'CONTROL ERRORS RETURN'                */
/* @AK  200226  RACFA    Removed double quotes before/after cmd       */
/* @AJ  200225  RACFA    Del address TSO "PROFILE PREF("USERID()")"   */
/* @AI  200224  RACFA    Fixed PANEL08, typo in defining variable     */
/* @AH  200224  RACFA    Standardize quotes, chg single to double     */
/* @AG  200224  RACFA    Place panels at top of REXX in variables     */
/* @AF  200223  RACFA    Del 'address TSO "PROFILE MSGID"', not needed*/
/* @AE  200223  RACFA    Reduced code when LOCATEing, not necessary   */
/* @AD  200223  RACFA    Reduced code when SORTing, not necessary     */
/* @AC  200223  RACFA    Created RACFCLSD (only Class, no profile col)*/
/* @AB  200223  RACFA    Added primary cmds: SORT, LOCATE, ONLY, RESET*/
/* @AA  200222  RACFA    Removed translating OPTA/B, not needed       */
/* @A9  200222  RACFA    Allow placing cursor on row and press ENTER  */
/* @A8  200221  RACFA    Removed "G = '(G)'", not referenced          */
/* @A7  200221  RACFA    Get ERASHOW, to display RACF cmds            */
/* @A6  200221  RACFA    Make 'ADDRESS ISPEXEC' defualt, reduce code  */
/* @A5  200220  RACFA    Fixed displaying all RACF commands           */
/* @A4  200220  RACFA    Added ERATRACE=YES, then TRACE R             */
/* @A3  200214  RACFA    Chged panel name RACFSRCH to RACFCLS8        */
/* @A2  200120  RACFA    Standardized/reduced lines of code           */
/* @A1  200120  RACFA    Added comment box above procedures           */
/* @A0  011229  NICORIZ  Created REXX, V2.1, www.rizzuto.it           */
/*====================================================================*/
PANEL08 = "RACFCLS8"    /* List classes and profiles       */ /* @AI */
PANEL13 = "RACFCLSD"    /* Add class                       */ /* @AG */
PANELM2 = "RACFMSG2"    /* Execute RACF Command (pop-up)   */ /* @AG */

ADDRESS ISPEXEC                                               /* @A6 */
  Arg user
  selection = 0  /* something selected */
  "CONTROL ERRORS RETURN"                                     /* @AL */
  "VGET (ZSCREEN ERATRACE ERASHOW ERASINT) ASIS"              /* @BY */
  If (eratrace = 'YES') then Trace r                          /* @A4 */
  rlv = SYSVAR('SYSLRACF')

  seconds = time('S')
  call Select_class
  if selection then rc = display_table_permit()
  "TBEND" tblb
EXIT
/*--------------------------------------------------------------------*/
/*  Get permits                                                       */
/*--------------------------------------------------------------------*/
GET_PERMITS:
  tblb    = 'TB'ZSCREEN||SECONDS  /* table name unique */     /* @BX */
  "TBCREATE" tblb" KEYS(CLASS PROFILE) REPLACE NOWRITE"       /* @BX */
  class = arg(1)
  user  = arg(2)
  cmd   = "SEARCH CLASS("class") USER("user")"                /* @A5 */
  x = OUTTRAP('VAR.')
  address TSO cmd                                             /* @A5 */
  cmd_rc = rc                                                 /* @AK */
  x = OUTTRAP('OFF')
  if (erashow = 'YES') then                                   /* @A5 */
     call SHOWCMD                                             /* @A5 */
  Do i = 1 to var.0   /* Scan output */
     profile = subword(var.i,1,1)
     If (profile = "NO") then                                 /* @BW */
        LEAVE         /* NO ENTRIES MEET SEARCH CRITERIA */
     if (profile <> 'ICH31005I') then do
        IF (ERASINT <> 0) THEN DO     /* Status interval */   /* @BY */
           IF (I//ERASINT = 0) THEN DO                        /* @BY */
              n1 = i; n2 = var.0
              "control display lock"
              "display msg(RACF012)"
           end                                                /* @BY */
        end                                                   /* @BY */
        "TBMOD" tblb
     end
  end /* end_do i=1     */
RETURN 0
/*--------------------------------------------------------------------*/
/*  Display permit table                                              */
/*--------------------------------------------------------------------*/
DISPLAY_TABLE_PERMIT:
  opta = ' '
  sort = 'PROFILE,C,A'                                        /* @BX */
  "TBSORT  "tblb" FIELDS("SORT")"                             /* @BX */
  "TBTOP   "tblb
  "TBDISPL "tblb "PANEL("PANEL08")"                           /* @AG */
  reta = rc
  do while (rc < 8)  /* tablea */
     "CONTROL DISPLAY SAVE"
     xtdtop = ztdtop
     lparm  = ""                                              /* @BX */
     PARSE VAR ZCMD ZCMD PARM SEQ                             /* @BX */
     IF (SROW <> "") & (SROW <> 0) THEN                       /* @A9 */
        IF (SROW > 0) THEN DO                                 /* @A9 */
           "TBTOP " TBLB                                      /* @A9 */
           "TBSKIP" TBLB "NUMBER("SROW")"                     /* @A9 */
        END                                                   /* @A9 */
     Select
        WHEN (ABBREV("SORT",ZCMD,1) = 1) THEN DO              /* @BX */
             xtdtop   = 1                                     /* @BX */
             if (seq = 'A') | (seq = 'D') then                /* @BX */
                nop                                           /* @BX */
             else                                             /* @BX */
                seq = 'A'                                     /* @BX */
             SELECT                                           /* @BX */
                when (ABBREV("PROFILE",PARM,1) = 1) then      /* @BX */
                     sort = 'PROFILE,C,'seq                   /* @BX */
                otherwise NOP                                 /* @BX */
             END                                              /* @BX */
        END                                                   /* @BX */
        WHEN (ABBREV("LOCATE",ZCMD,1) = 1) THEN               /* @BX */
             lparm = parm                                     /* @BX */
        WHEN (ABBREV("ONLY",ZCMD,1) = 1) THEN DO              /* @BX */
             find_str = translate(parm)                       /* @BX */
             'tbtop ' tblb                                    /* @BX */
             'tbskip' tblb                                    /* @BX */
             do forever                                       /* @BX */
                str = translate(profile)                      /* @BX */
                if (pos(find_str,str) > 0) then nop           /* @BX */
                else 'tbdelete' tblb                          /* @BX */
                'tbskip' tblb                                 /* @BX */
                if (rc > 0) then do                           /* @BX */
                   'tbtop' tblb                               /* @BX */
                   leave                                      /* @BX */
                end                                           /* @BX */
             end                                              /* @BX */
        END                                                   /* @BX */
        WHEN (ABBREV("RESET",ZCMD,1) = 1) THEN DO             /* @BX */
             sort = 'PROFILE,C,A'                             /* @BX */
             rc = get_permits(class,user) /*get permits*/     /* @BX */
             xtdtop   = 1                                     /* @BX */
        END                                                   /* @BX */
        otherwise locvar=''
     End
     Select
        when (opta = 'S') then x = RACFAUTH(class profile user)
        otherwise nop
     End
     Do while (reta = 4)   /* process multi selection */
        "CONTROL DISPLAY RESTORE"
        "TBDISPL" tblb
        reta = rc
        "CONTROL DISPLAY SAVE"
        Select
           when (opta = 'S') then
                x = RACFAUTH(class profile user)
           otherwise nop
        End
     end
     opta = ' '
     "TBSORT "tblb" FIELDS(PROFILE,C,A)"
     "TBTOP  "tblb                                            /* @BX */
     if (lparm <> '') then do
        ASTERICK = "*"                                        /* @BX */
        LOCARG   = "PROFILE"                                  /* @BX */
        INTERPRET LOCARG" = lparm||ASTERICK"                  /* @BX */
        "TBSCAN "tblb,                                        /* @BX */
                "ARGLIST("LOCARG") CONDLIST(GE)"              /* @BX */
     end
     else
        "TBSKIP" tblb "NUMBER("XTDTOP")"
     "CONTROL DISPLAY RESTORE"
     "TBDISPL" tblb "PANEL("PANEL08")"                        /* @AG */
     reta = rc
  end  /* Do while (reta < 8) */
RETURN 0
/*--------------------------------------------------------------------*/
/*  Select class                                                      */
/*--------------------------------------------------------------------*/
SELECT_CLASS:
  call get_act_class
  rc = display_table()
  "TBEND" tbla
RETURN
/*--------------------------------------------------------------------*/
/*  Display profile permits                                           */
/*--------------------------------------------------------------------*/
GET_ACT_CLASS:
  seconds = time('S')                                         /* @AB */
  tbla    = 'TA'ZSCREEN||SECONDS  /* table name unique */     /* @AB */
  "TBCREATE" TBLA "KEYS(CLASS)",                              /* @AB */
                  "NAMES(ACTION) REPLACE NOWRITE"             /* @AB */
  Scan = 'OFF'                                                /* @AB */
  cmd  = "SETROPTS LIST"                                      /* @A5 */
  x = OUTTRAP('var.')
  address TSO cmd                                             /* @A5 */
  cmd_rc = rc                                                 /* @AK */
  x = OUTTRAP('OFF')
  if (erashow = 'YES') then                                   /* @A5 */
     call SHOWCMD                                             /* @A5 */
  Do i = 1 to var.0           /* Scan output */
     temp = var.i
     if (rlv > '1081') then   /* RACF 1.9 add blank */
        temp = ' 'temp
     Select
        when (substr(temp,2,16) = 'ACTIVE CLASSES =') then do
             scan   = 'ON'
             record = substr(temp,18,80)
             nwords = words(record)
             do t = 1 to nwords
                class = subword(record,t,1)
                if (class <> 'USER'),
                 & (class <> 'DATASET'),
                 & (class <> 'GROUP') then
                   "TBMOD" tbla
             end
        end
        when (substr(temp,2,25) =,
             'GENERIC PROFILE CLASSES =') then leave
        otherwise
             if (scan = 'ON') then do
                  record = var.i
                  nwords = words(record)
                  do t = 1 to nwords
                     class = subword(record,t,1)
                     if (class <> 'USER'),
                      & (class <> 'DATASET'),
                      & (class <> 'GROUP') then
                        "TBMOD" tbla
                  end
             end
     End    /* end_select */
  end  /* end_scan output */
RETURN
/*--------------------------------------------------------------------*/
/*  Display table                                                     */
/*--------------------------------------------------------------------*/
DISPLAY_TABLE:
  opta = ' '
  sort = 'CLASS,C,A'                                          /* @AD */
  "TBSORT " tbla "FIELDS("sort")"                             /* @AD */
  "TBTOP  " tbla
  "TBDISPL" tbla "PANEL("PANEL13")"                           /* @AG */
  reta = rc
  Do while ^selection & (reta < 8)
     "CONTROL DISPLAY SAVE"
     action = ''
     lclass = ''                                              /* @AE */
     xtdtop = ztdtop
     lparm  = ""                                              /* @AB */
     PARSE VAR ZCMD ZCMD PARM SEQ                             /* @AB */
     IF (SROW <> "") & (SROW <> 0) THEN                       /* @A9 */
        IF (SROW > 0) THEN DO                                 /* @A9 */
           "TBTOP " TBLA                                      /* @A9 */
           "TBSKIP" TBLA "NUMBER("SROW")"                     /* @A9 */
        END                                                   /* @A9 */
     Select                                                   /* @AB */
        WHEN (ABBREV("SORT",ZCMD,1) = 1) THEN DO              /* @AB */
             xtdtop   = 1                                     /* @AB */
             if (seq = 'A') | (seq = 'D') then                /* @AB */
                nop                                           /* @AB */
             else                                             /* @AB */
                seq = 'A'                                     /* @AB */
             SELECT                                           /* @AB */
                when (ABBREV("CLASS",PARM,1) = 1) then        /* @AB */
                     sort = 'CLASS,C,'seq                     /* @AD */
                otherwise NOP                                 /* @AB */
             END                                              /* @AB */
        END                                                   /* @AB */
        WHEN (ABBREV("LOCATE",ZCMD,1) = 1) THEN               /* @AB */
             lclass = parm                                    /* @AE */
        WHEN (ABBREV("ONLY",ZCMD,1) = 1) THEN DO              /* @AB */
             find_str = translate(parm)                       /* @AB */
             'tbtop ' tbla                                    /* @AB */
             'tbskip' tbla                                    /* @AB */
             do forever                                       /* @AB */
                str = translate(class)                        /* @AB */
                if (pos(find_str,str) > 0) then nop           /* @AB */
                else 'tbdelete' tbla                          /* @AB */
                'tbskip' tbla                                 /* @AB */
                if (rc > 0) then do                           /* @AB */
                   'tbtop' tbla                               /* @AB */
                   leave                                      /* @AB */
                end                                           /* @AB */
             end                                              /* @AB */
        END                                                   /* @AB */
        WHEN (ABBREV("RESET",ZCMD,1) = 1) THEN DO             /* @AB */
             call get_act_class                               /* @AB */
             sort = 'CLASS,C,A'                               /* @AD */
             xtdtop   = 1                                     /* @AB */
        END                                                   /* @AB */
        otherwise NOP                                         /* @AB */
     END /* Select */                                         /* @AB */
     select
        when (opta = 'S') then do
             DISPCLS = CLASS                                  /* @AC */
             rc = get_permits(class,user) /*get permits*/
             selection = 1
        end
        otherwise nop
     End
     Do while (reta = 4)   /* process multi selection */
        "CONTROL DISPLAY RESTORE"
        "TBDISPL" tbla
        reta = rc
        "CONTROL DISPLAY SAVE"
        Select
           when (opta = 'S') then
                rc = get_permits(class,user) /*get permits*/
           otherwise nop
        End
     end
     opta = ' '
     "TBSORT" tbla "FIELDS("sort")"                           /* @AB */
     "TBTOP  " tbla
     if (lclass <> '') then do                                /* @AE */
        class = lclass                                        /* @AE */
        "TBSARG" TBLA "NEXT NAMECOND(CLASS,GE)"               /* @AE */
        "TBSCAN" TBLA "NOREAD"                                /* @AE */
     end                                                      /* @AE */
     else                                                     /* @AB */
        "TBSKIP" tbla "NUMBER("XTDTOP")"
     "CONTROL DISPLAY RESTORE"
     if ^selection then do
        "TBDISPL" tbla "PANEL("PANEL13")"                     /* @AG */
        reta = rc
     end
  end  /* Do while (reta < 8) */
RETURN 0
/*--------------------------------------------------------------------*/
/*  Error message                                                     */
/*--------------------------------------------------------------------*/
ERROR:
  say 'Error RACFCLSS at line 'sigl
EXIT
/*--------------------------------------------------------------------*/
/*  Display RACF command                                          @A5 */
/*--------------------------------------------------------------------*/
SHOWCMD:                                                      /* @A5 */
  PARSE VAR CMD MSG1 60 MSG2 121 MSG3                         /* @A5 */
  MSG4 = "Return code = "cmd_rc                               /* @AK */
  "ADDPOP ROW(6) COLUMN(4)"                                   /* @AH */
  "DISPLAY PANEL("PANELM2")"                                  /* @AG */
  "REMPOP"                                                    /* @AH */
RETURN                                                        /* @A5 */
