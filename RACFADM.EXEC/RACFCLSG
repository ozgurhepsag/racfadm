/*%NOCOMMENT====================* REXX *==============================*/
/*  PURPOSE:  RACFADM - General resources - Generic class profile     */
/*--------------------------------------------------------------------*/
/* FLG  YYMMDD  USERID   DESCRIPTION                                  */
/* ---  ------  -------  -------------------------------------------- */
/* @B4  200303  RACFA    Chg 'RC/Ret_code' to 'cmd_rc' after EXCMD    */
/* @B3  200303  RACFA    Fixed RC and del TBDMOD, not needed          */
/* @B2  200303  RACFA    Chk RC 'RLIST prms', if RC>0 then 'RLIST'    */
/* @B1  200303  RACFA    Del WFLUPRM and get_setropts_options         */
/* @AZ  200303  RACFA    Fixed chking RC, del TBMOD, not needed       */
/* @AY  200302  RACFA    Del TBTOP cmd, prior to TBSCAN for LOCATE    */
/* @AW  200301  RACFA    Fixed displaying userids, was ret_code       */
/* @AU  200301  RACFA    Del EMSG procedure, instead call racfmsgs    */
/* @AT  200226  RACFA    Fix @AR chg, chg ret_code to cmd_rc          */
/* @AS  200226  RACFA    Added 'CONTROL ERRORS RETURN'                */
/* @AR  200226  RACFA    Added 'Return Code =' when displaying cmd    */
/* @AQ  200226  RACFA    Removed double quotes before/after cmd       */
/* @AP  200225  RACFA    Chg PANEL09=RACFCLS9 to PANEL02=RACFCLS2     */
/* @AO  200225  TRIDJK   Fix ONLY search argument for profiles        */
/* @AN  200224  RACFA    Standardize quotes, chg single to double     */
/* @AM  200224  RACFA    Place panels at top of REXX in variables     */
/* @AL  200223  RACFA    Deleted panel RACFCLS2, no longer needed     */
/* @AK  200223  RACFA    Added primary cmds SORT, LOCATE, ONLY, RESET */
/* @AJ  200223  RACFA    Del 'address TSO "PROFILE MSGID"', not needed*/
/* @AI  200222  RACFA    Allow placing cursor on row and press ENTER  */
/* @AH  200221  RACFA    Removed "G = '(G)'", not referenced          */
/* @AG  200221  RACFA    Make 'ADDRESS ISPEXEC' defualt, reduce code  */
/* @AF  200220  RACFA    Fixed displaying all RACF commands           */
/* @AE  200220  RACFA    When ERATRACE=YES, then TRACE R, was I       */
/* @AD  200220  RACFA    Removed initializing ERASINT variable        */
/* @AC  200220  RACFA    Added capability to browse/edit/view file    */
/* @AB  200218  RACFA    Use dynamic area to display SELECT commands  */
/* @AA  200218  RACFA    Added 'Status Interval' option               */
/* @A9  200123  RACFA    Retrieve default filter, Option 0 - Settings */
/* @A8  200123  TRIDJK   If LG fails, then issue a LU                 */
/* @A7  200122  RACFA    set rfilter='', so as not to tie up terminal */
/* @A6  200122  TRIDJK   Test/del MFA option from 'LU userid' command */
/* @A5  200120  RACFA    Removed 'say msg.msg_var' in EXCMD procedure */
/* @A4  200119  RACFA    Standardized/reduced lines of code           */
/* @A3  200119  RACFA    Added comment box above procedures           */
/* @A2  200118  RACFA    Added line command L-List to display group   */
/* @A1  200118  RACFA    Added line command L-List to execute RLIST   */
/* @A0  011229  NICORIZ  Created REXX, V2.1, www.rizzuto.it           */
/*====================================================================*/
PANEL01 = "RACFCLS1"    /* Set filter, menu option 4       */ /* @AM */
PANEL02 = "RACFCLS2"    /* List profiles and descriptions  */ /* @AP */
PANEL03 = "RACFCLS3"    /* Add class                       */ /* @AM */
PANEL04 = "RACFCLS4"    /* Change class                    */ /* @AM */
PANEL05 = "RACFCLS5"    /* List group/ids and access       */ /* @AM */
PANEL06 = "RACFCLS6"    /* Change access                   */ /* @AM */
PANEL07 = "RACFCLS7"    /* Add access                      */ /* @AM */
PANEL12 = "RACFCLSB"    /* List members                    */ /* @AM */
PANEL13 = "RACFCLSC"    /* Add class                       */ /* @AM */
PANELM1 = "RACFMSG1"    /* Confirm Request (pop-up)        */ /* @AM */
PANELM2 = "RACFMSG2"    /* Execute RACF Command (pop-up)   */ /* @AM */

ADDRESS ISPEXEC                                               /* @AG */
  Arg Rclass Rfilter Rdisp
  If (Rfilter = '') Then Do                                   /* @A9 */
     "VGET (ERAFLTR) ASIS"                                    /* @A9 */
     Rfilter = ERAFLTR                                        /* @A9 */
  end                                                         /* @A9 */
  Raclist       = 'NO'
  Pnl_list_prof = PANEL02                                     /* @AP */
  Rclass        = strip(rclass)
  "CONTROL ERRORS RETURN"                                     /* @AS */
  "VGET (ZSCREEN ERASHOW ERATRACE ERACONF",                   /* @AA */
        "ERASINT ERAADMN ERADISP) ASIS"                       /* @AC */
  If (eratrace = 'YES') then Trace r                          /* @AE */
  If (ERAADMN = "YES") then                                   /* @AB */
      SELCMDS = "ÝS¨Show,ÝL¨List,ÝC¨Change,ÝA¨Add,ÝR¨Remove"  /* @AB */
  else
      SELCMDS = "ÝS¨Show,ÝL¨list"                             /* @AB */
  rlv    = SYSVAR('SYSLRACF')
  called = SYSVAR('SYSNEST')
  If (called = 'YES') & (rdisp <> 'YES') then
     "CONTROL NONDISPL ENTER"
  "DISPLAY PANEL("PANEL01")"                                  /* @AM */
  Do while (rc = 0)
     Call create_table
     call Profl
     if (called <> 'YES') | (rdisp = 'YES') then do
        "DISPLAY PANEL("PANEL01")"                            /* @AM */
        ret_code = rc
     end
  end
  If (raclist = 'YES') then do
     msg    = 'You are about to refresh class' rclass 'in RACLIST'
     Sure_? = Confirm_request(msg)
     if (sure_? = 'YES') then do
        cmd = "SETROPTS RACLIST("rclass") REFRESH"            /* @AF */
        address TSO cmd                                       /* @AF */
        cmd_rc = rc                                           /* @AR */
        if (erashow = 'YES') then                             /* @AF */
           call SHOWCMD                                       /* @AF */
     end
  end
RETURN 0
/*--------------------------------------------------------------------*/
/*  Show all profiles for a filter                                    */
/*--------------------------------------------------------------------*/
PROFL:
  opta = ' '
  sort = 'PROFILE,C,A'                                        /* @AK */
  CLRPROF = "TURQ";  CLRDATA = "GREEN"   /* Col. colors */    /* @AK */
  "TBSORT " tbla "FIELDS("sort")"                             /* @AK */
  "TBTOP  " tbla
  "TBDISPL" tbla "PANEL("Pnl_list_prof")"
  reta = rc
  do while (reta < 8)    /* tablea panel */
     "CONTROL DISPLAY SAVE"
     xtdtop = ztdtop
     lparm  = ""                                              /* @AK */
     PARSE VAR ZCMD ZCMD PARM SEQ                             /* @AK */
     IF (SROW <> "") & (SROW <> 0) THEN                       /* @AI */
        IF (SROW > 0) THEN DO                                 /* @AI */
           "TBTOP " TBLA                                      /* @AI */
           "TBSKIP" TBLA "NUMBER("SROW")"                     /* @AI */
        END                                                   /* @AI */
     Select                                                   /* @AK */
        WHEN (ABBREV("SORT",ZCMD,1) = 1) THEN DO              /* @AK */
             xtdtop   = 1                                     /* @AK */
             if (seq = 'A') | (seq = 'D') then                /* @AK */
                nop                                           /* @AK */
             else                                             /* @AK */
                seq = 'A'                                     /* @AK */
             SELECT                                           /* @AK */
                when (ABBREV("PROFILE",PARM,1) = 1) then      /* @AK */
                     sort = 'PROFILE,C,'seq                   /* @AK */
                when (ABBREV("DESCRIPTION",PARM,1) = 1) then  /* @AK */
                     sort = 'DATA,C,'seq                      /* @AK */
                otherwise NOP                                 /* @AK */
             END                                              /* @AK */
        END                                                   /* @AK */
        WHEN (ABBREV("LOCATE",ZCMD,1) = 1) THEN               /* @AK */
             lparm = parm                                     /* @AK */
        WHEN (ABBREV("ONLY",ZCMD,1) = 1) THEN DO              /* @AK */
             find_str = translate(parm)                       /* @AK */
             'tbtop ' tbla                                    /* @AK */
             'tbskip' tbla                                    /* @AK */
             do forever                                       /* @AK */
                str = translate(profile data)                 /* @AO */
                if (pos(find_str,str) > 0) then nop           /* @AK */
                else 'tbdelete' tbla                          /* @AK */
                'tbskip' tbla                                 /* @AK */
                if (rc > 0) then do                           /* @AK */
                   'tbtop' tbla                               /* @AK */
                   leave                                      /* @AK */
                end                                           /* @AK */
             end                                              /* @AK */
        END                                                   /* @AK */
        WHEN (ABBREV("RESET",ZCMD,1) = 1) THEN DO             /* @AK */
             sort = 'PROFILE,C,A'                             /* @AK */
             call create_table                                /* @AK */
             xtdtop   = 1                                     /* @AK */
        END                                                   /* @AK */
        otherwise NOP                                         /* @AK */
     END /* Select */                                         /* @AK */
     Select
        when (opta= 'A') then call Addd
        when (opta= 'C') then call Chgd
        when (opta= 'S') then call Disd
        when (opta= 'L') then call Lisd                       /* @A1 */
        when (opta= 'R') then call Deld
        when (opta= 'M') then call Dism
        otherwise nop
     End
     Do while (reta = 4)   /* process multi selection */
        "CONTROL DISPLAY RESTORE"
        "TBDISPL" tbla
        reta = rc
        "CONTROL DISPLAY SAVE"
        Select
           when (opta= 'A') then call Addd
           when (opta= 'C') then call Chgd
           when (opta= 'S') then call Disd
           when (opta= 'L') then call Lisd                    /* @A1 */
           when (opta= 'R') then call Deld
           when (opta= 'M') then call Dism
           otherwise nop
        End
     end  /* Do while (reta < 4) */
     opta = ' '
     PARSE VAR SORT LOCARG "," .                              /* @AK */
     CLRPROF = "GREEN"; CLRDATA = "GREEN"                     /* @AK */
     INTERPRET "CLR"SUBSTR(LOCARG,1,4)" = 'TURQ'"             /* @AK */
     "TBSORT" tbla "FIELDS("sort")"                           /* @AK */
     "TBTOP  " tbla
     if (lparm <> '') then do                                 /* @AK */
        ASTERICK = "*"                                        /* @AK */
        INTERPRET LOCARG" = lparm||ASTERICK"                  /* @AK */
        PARSE VAR SORT . "," . "," SEQ                        /* @AK */
        IF (SEQ = "D") THEN                                   /* @AK */
           CONDLIST = "LE"                                    /* @AK */
        ELSE                                                  /* @AK */
           CONDLIST = "GE"                                    /* @AK */
        "TBSCAN "tbla,                                        /* @AK */
                "ARGLIST("LOCARG") CONDLIST("CONDLIST")"      /* @AK */
     end                                                      /* @AK */
     else                                                     /* @AK */
        "TBSKIP" tbla "NUMBER("XTDTOP")"
     "CONTROL DISPLAY RESTORE"
     "TBDISPL" tbla "PANEL("Pnl_list_prof")"
     reta = rc
  end  /* Do while (reta < 8) */
RETURN
/*--------------------------------------------------------------------*/
/*  Add new profile                                                   */
/*--------------------------------------------------------------------*/
ADDD:
  new ='NO'
  if (profile = 'NONE') then
     new = 'YES'
  else
     CALL Getd
  "DISPLAY PANEL("PANEL03")"                                  /* @AM */
  if (rc > 0) then
     return
  if (type = 'DISCRETE') then
     type = ' '
  aud = ' '
  wrn = ' '
  if (warn = 'YES') then
     wrn = 'WARNING'
  if (fail <> ' ') then
     aud = 'FAILURES('FAIL')'
  if (succ <> ' ') then
     aud = 'SUCCESS('SUCC')' aud
  if (aud <> ' ') then
     aud = 'AUDIT('AUD')'
  xtr = ' '
  if (data <> ' ') then
     xtr = xtr "DATA('"data"')"
  call EXCMD "RDEF "RCLASS" ("PROFILE") OWN("OWNER")",
             "UACC("UACC")" aud xtr wrn
  if (cmd_rc > 0) then do                                     /* @B4 */
     CALL racfmsgs 'ERR01' /* Add DSD failed */               /* @AU */
     return
  end
  x = msg('OFF')
  call EXCMD "PE "PROFILE" CLASS("RCLASS")",
             "ID("USERID()") DELETE" TYPE
  x = msg('ON')
  if (from <> ' ') then do
     if (type <> ' ') then ftype = 'FGENERIC'
     else ftype = ''
     fopt = "FROM("FROM") FCLASS("FCLASS") "FTYPE""
     call EXCMD "PERMIT "PROFILE" CLASS("RCLASS")",
                 TYPE FOPT
     if (cmd_rc > 0) then                                     /* @B4 */
        CALL racfmsgs 'ERR04' /* Permit Warn */               /* @AU */
  end
  if (type = ' ') then
     type = 'DISCRETE'
  "TBMOD" TBLA
  if (new = 'YES') then do
     profile = 'NONE'
     type    = 'GEN'
     "TBDELETE"  TBLA
  end
RETURN
/*--------------------------------------------------------------------*/
/*  Change profile                                                    */
/*--------------------------------------------------------------------*/
CHGD:
  if (profile = 'NONE') then
     return
  CALL Getd
  "DISPLAY PANEL("PANEL04")"                                  /* @AM */
  if (rc > 0) then return
  own = ' '
  if (owner <> ' ') then
     own = 'OWNER('OWNER')'
  wrn = ' '
  if (warn  = 'YES') then
     wrn = 'WARNING'
  else
     wrn = 'NOWARNING'
  uc = ' '
  if (uacc <> ' ') then
     uc = 'UACC('UACC')'
  aud = ' '
  if (fail <> ' ') then
     aud = 'FAILURES('FAIL')'
  if (succ <> ' ') then
     aud = 'SUCCESS('SUCC')' aud
  if (aud  <> ' ') then
     aud = 'AUDIT('AUD')'
  xtr = ' '
  if (data <> ' ') then do
     if (data = 'NONE') then
        data = ' '
     xtr = xtr "DATA('"DATA"')"
  end
  call EXCMD "RALTER "RCLASS" ("PROFILE")",
             own uc aud xtr wrn
  if (cmd_rc > 0) then                                        /* @B4 */
     call racfmsgs 'ERR07' /* Altdsd failed */                /* @AU */
  else do
      if (type = ' ') then
         type = 'DISCRETE'
      "TBMOD" tbla
  end
RETURN
/*--------------------------------------------------------------------*/
/*  Delete Profile                                                    */
/*--------------------------------------------------------------------*/
DELD:
  if (profile = 'NONE') then
     return
  if (type = 'DISCRETE') then
     type = ' '
  msg    ='You are about to delete 'profile
  Sure_? = Confirm_request(msg)
  if (sure_? = 'YES') then do
     call EXCMD "RDELETE "RCLASS PROFILE
     if (cmd_rc = 0) then do                                  /* @B4 */
        if type = ' ' then
           type = 'DISCRETE'
        "TBDELETE" TBLA
     end
     else
        CALL racfmsgs "ERR02" /* RDELETE failed */            /* @AU */
  end
RETURN
/*--------------------------------------------------------------------*/
/*  Display member list                                               */
/*--------------------------------------------------------------------*/
DISM:
  if (profile = 'NONE') then
     return
  tblb = 'TB'ZSCREEN||SECONDS  /* table name unique */
  "TBCREATE" TBLB "KEYS(ID) NAMES(ACC) REPLACE NOWRITE"
  id = 'NONE'
  /* Populate table */
  call GETM
  /* Permit table display section */
  rb   = 'NO'
  optb = ' '
  /* Ability to perform actions on different profile */
  Real_profile = profile||rclass
  Profchg      = 'NO'
  If (profile||rclass <> Real_profile) then Profchg = 'YES'
  "TBSORT " tblb "FIELDS(ID)"
  "TBTOP  " tblb
  "TBDISPL" tblb "PANEL("PANEL12")"                           /* @AM */
  retb = rc
  Do while (retb < 8)       /* tableb panel */
     "CONTROL DISPLAY SAVE"
     IF (SROW <> "") & (SROW <> 0) THEN                       /* @AI */
        IF (SROW > 0) THEN DO                                 /* @AI */
           "TBTOP " TBLB                                      /* @AI */
           "TBSKIP" TBLB "NUMBER("SROW")"                     /* @AI */
        END                                                   /* @AI */
     Select
        when (optb = 'A') then call Addm
        when (optb = 'R') then call Delm
        otherwise nop
     End
     Do while (retb = 4)   /* process multi-section */
        "CONTROL DISPLAY RESTORE"
        "TBDISPL" tblb
        retb = rc
        "CONTROL DISPLAY SAVE"
        Select
           when (optb = 'A') then call Addm
           when (optb = 'R') then call Delm
           otherwise nop
        End
     end
     optb = ' '
     "CONTROL DISPLAY RESTORE"
     "TBSORT" tblb "FIELDS(ID)"
     "TBTOP " tblb
     "TBSKIP" tblb "NUMBER("ZTDTOP")"
     if (rb = "YES") then
        retb = 12         /* rebuild table required */
     else do
        "TBDISPL" tblb "PANEL("PANEL12")"                     /* @AM */
        retb = rc
     end
  end  /* While retb< 8 */
  "TBEND" tblb
RETURN
/*--------------------------------------------------------------------*/
/*  Add member                                                        */
/*--------------------------------------------------------------------*/
ADDM:
  new = 'NO'
  if (id = 'NONE') then
     new = 'YES'
  "DISPLAY PANEL("PANEL13")"                                  /* @AM */
  if (rc > 0) then return
  addmem = 'ADDMEM('id')'
  call EXCMD "RALTER "RCLASS PROFILE ADDMEM
  if (cmd_rc = 0) then do                                     /* @B4 */
     "TBMOD" tblb
     if (new = 'YES') then do
        id = 'NONE'
        "TBDELETE" tblb
     end
  end
  else call racfmsgs 'ERR10' /* Add member Failed */          /* @AU */
RETURN
/*--------------------------------------------------------------------*/
/*  Remove Member                                                     */
/*--------------------------------------------------------------------*/
DELM:
  if (id = 'NONE') then
     return
  msg    ='You are about to delete 'id
  Sure_? = Confirm_request(msg)
  if (sure_? = 'YES') then do
     delmem = 'DELMEM('id')'
     call EXCMD "RALTER "RCLASS PROFILE DELMEM
     if (cmd_rc = 0) then                                     /* @B4 */
        "TBDELETE" tblb
     else
        CALL racfmsgs "ERR14"   /* RDELETE failed */          /* @AU */
  end
RETURN
/*--------------------------------------------------------------------*/
/*  Get member list                                                   */
/*--------------------------------------------------------------------*/
GETM:
  cmd = "RLIST "RCLASS PROFILE" AUTH"                         /* @AF */
  x = OUTTRAP('var.')
  address TSO cmd                                             /* @AF */
  cmd_rc = rc                                                 /* @AR */
  x = OUTTRAP('OFF')
  if (erashow = 'YES') then                                   /* @AF */
     call SHOWCMD                                             /* @AF */
  dism_max = var.0
  rsce_beg = 0
  rsce_end = 0
  Do dism_count=0 to dism_max
     rsce_beg = POS('RESOURCES IN GROUP',var.dism_count)
     if rsce_beg then
        do until rsce_end
           dism_count = dism_count+1
           parse var var.dism_count id rest
           rsce_end = POS('LEVEL  OWNER',var.dism_count)
           if (id <> '') & (id <> '---------') & ^rsce_end
             then "TBMOD" tblb
        end
  end
RETURN
/*--------------------------------------------------------------------*/
/*  Display profile permits                                           */
/*--------------------------------------------------------------------*/
DISD:
  if (profile = 'NONE') then
     return
  Do until (RB='NO')     /* allow rebuild option */
     tblb = 'TB'ZSCREEN||SECONDS  /* table name unique */
     "TBCREATE" TBLB "KEYS(ID)",
                     "NAMES(ACC) REPLACE NOWRITE"
     flags = 'OFF'
     audit = ' '
     owner = ' '
     uacc  = ' '
     data  = ' '
     warn  = ' '
     if (type = 'DISCRETE') then
        type = ' '
     cmd = "RLIST "RCLASS PROFILE" AUTH"                      /* @AF */
     x = OUTTRAP('VAR.')
     address TSO cmd                                          /* @AF */
     cmd_rc = rc                                              /* @AR */
     x = OUTTRAP('OFF')
     if (erashow = 'YES') then                                /* @AF */
        call SHOWCMD                                          /* @AF */
     if (type = ' ') then
        type = 'DISCRETE'
     Do i = 1 to var.0                /* Scan output */
        temp = var.i
        if (rlv > '1081') then  /* RACF 1.9 add blank */
           temp= ' 'temp
        l = LENGTH(temp)
        if (uacc = ' ') then
           if (substr(temp,2,12)= 'LEVEL  OWNER') then do
              i     = i + 2
              temp  = var.i
              owner = subword(temp,2,1)
              uacc  = subword(temp,3,1)
              warn  = subword(temp,5,1)
           end
        if (audit = ' ') then
           if (substr(temp,2,8) = 'AUDITING') then do
              i     = i + 2
              temp  = var.i
              audit = subword(temp,1,1)
           end
        if (data = ' ') then
           if (substr(temp,2,17) = 'INSTALLATION DATA') then do
              i    = i + 2
              temp = var.i
              data = temp
              i    = i + 1
              temp = var.i
              data = data || substr(temp,2)
           end
        if (flags = 'ON') then do
           if (l = 1) | (l = 2) then
              flags = 'OUT'     /* end of access list */
           if (l > 8) then
              if (substr(temp,1,9) = ' ') then
                 flags = 'OUT'  /* end of access list */
        end
        if (flags = 'ON') then do
           if (substr(temp,2,10) = 'NO ENTRIES') then do
              id  = 'NONE'       /* empty access list */
              acc = 'DEFINED'
           end
           else do
              id  = subword(temp,1,1)
              acc = subword(temp,2,1)
           end
           "TBMOD" tblb
        end
        if (substr(temp,1,17) = 'USER      ACCESS') then do
           flags = 'ON'   /* start of access list */
           i     = i + 1      /* skip */
        end
     end  /* Loop scan output */
     /* Permit table display section */
     rb   = 'NO'
     optb = ' '
     "TBSORT" tblb "FIELDS(ID)"
     "TBTOP " tblb
     /* ability to perform actions on different profile */
     Real_profile = profile||rclass
     Profchg      ='NO'
     "TBDISPL" tblb "PANEL("PANEL05")"                        /* @AM */
     If (profile||rclass <> Real_profile) then Profchg = 'YES'
     retb = rc
     Do while (retb < 8)    /* tableb panel */
        "CONTROL DISPLAY SAVE"
        IF (SROW <> "") & (SROW <> 0) THEN                    /* @AI */
           IF (SROW > 0) THEN DO                              /* @AI */
              "TBTOP " TBLB                                   /* @AI */
              "TBSKIP" TBLB "NUMBER("SROW")"                  /* @AI */
           END                                                /* @AI */
        Select
           when (optb= 'A') then call Addp
           when (optb= 'C') then call Chgp
           when (optb= 'L') then call Lisp                    /* @A2 */
           when (optb= 'R') then call Delp
           when (optb= 'S') then call Disp
           otherwise nop
        End
        Do while (retb = 4)   /* process multi-section */
           "CONTROL DISPLAY RESTORE"
           "TBDISPL" tblb
           retb = rc
           "CONTROL DISPLAY SAVE"
           Select
              when (optb= 'A') then call Addp
              when (optb= 'C') then call Chgp
              when (optb= 'L') then call Lisp                 /* @A2 */
              when (optb= 'R') then call Delp
              when (optb= 'S') then call Disp
              otherwise nop
           End
        end  /* While retb= 4 */
        optb = ' '
        "CONTROL DISPLAY RESTORE"
        "TBSORT" tblb "FIELDS(ID)"
        "TBTOP " tblb
        "TBSKIP" tblb "NUMBER("ZTDTOP")"
        if (rb = "YES") then
           retb = 12         /* rebuild table required */
        else do
           "TBDISPL" tblb "PANEL("PANEL05")"                  /* @AM */
           retb = rc
        end
     end  /* While retb< 8 */
     "TBEND" tblb
  end  /* Do until */
RETURN
/*--------------------------------------------------------------------*/
/*  Get RLIST info                                                    */
/*--------------------------------------------------------------------*/
GETD:
  flags  = 'OFF'
  owner  = ' '
  uacc   = ' '
  audit  = ' '
  data   = ' '
  warn   = ' '
  memcls = ' '
  cmd    = "RLIST "RCLASS PROFILE                             /* @AF */
  x = OUTTRAP('getd_var.')
  address TSO cmd                                             /* @AF */
  cmd_rc = rc                                                 /* @AR */
  x = OUTTRAP('OFF')
  if (erashow = 'YES') then                                   /* @AF */
     call SHOWCMD                                             /* @AF */
  Do getd_i = 1 to getd_var.0 while (flags<> 'OUT') /* Scan output */
     getd_temp = getd_var.getd_i
     if (rlv > '1081') then         /* RACF 1.9 add blank */
        getd_temp= ' 'getd_temp
     if (uacc = ' ') then
        if (substr(getd_temp,2,12) = 'LEVEL  OWNER') then do
           getd_i    = getd_i + 2
           getd_temp = getd_var.getd_i
           owner     = subword(getd_temp,2,1)
           uacc      = subword(getd_temp,3,1)
           warn      = subword(getd_temp,5,1)
        end
     if (memcls = ' ') then
        if (substr(getd_temp,2,17) = 'MEMBER CLASS NAME') then do
           getd_i        = getd_i + 2
           getd_temp     = getd_var.getd_i
           memcls        = subword(getd_temp,1,1)
           If (ERAADMN = "YES") then                          /* @AL */
               SELCMDS = "ÝS¨Show,ÝL¨list,ÝC¨Change,"||,      /* @AL */
                         "ÝA¨dd,ÝR¨Remove,ÝM¨Member"          /* @AL */
           else                                               /* @AL */
               SELCMDS = "ÝS¨Show,ÝL¨list"                    /* @AL */
        end
     if (audit = ' ') then
        if (substr(getd_temp,2,8) = 'AUDITING') then do
           getd_i    = getd_i + 2
           getd_temp = getd_var.getd_i
           audit     = subword(getd_temp,1,1)
        end
     if (data = ' ') then
        if (substr(getd_temp,2,17) = 'INSTALLATION DATA') then do
           getd_i        = getd_i + 2
           getd_temp     = getd_var.getd_i
           data_1st_line = getd_temp
           getd_i        = getd_i+ 1
           getd_temp     = getd_var.getd_i
           data_2nd_line = getd_temp
           data = data_1st_line||strip(data_2nd_line,'t')
        end
  end  /* Getd_i= 1 do */

  a = INDEX(audit,'ALL')
  if (a > 0) then do
     fail = substr(audit,a+4,7)
     succ = substr(audit,a+4,7)
  end
  else do
     f = INDEX(audit,'FAILURES')
     if (f > 0) then
        fail = substr(audit,f+9,7)
     s = INDEX(audit,'SUCCESS')
     if (s > 0) then
        succ = substr(audit,s+8,7)
  end
RETURN
/*--------------------------------------------------------------------*/
/*  Change permit option                                              */
/*--------------------------------------------------------------------*/
CHGP:
  If (id = 'NONE') then
     return
  "DISPLAY PANEL("PANEL06")"                                  /* @AM */
  if (rc > 0) then
     return
  if (type = 'DISCRETE') then
     type = ' '
  call EXCMD "PE "PROFILE" CLASS("RCLASS")",
             "ID("ID") ACC("ACC")" TYPE
  if (cmd_rc = 0) then do                                     /* @B4 */
     if (type = ' ') then
        type = 'DISCRETE'
     "TBMOD" tblb
  end
  else
     Call racfmsgs 'ERR03' /* Permit failed */                /* @AU */
RETURN
/*--------------------------------------------------------------------*/
/*  Display userid                                                    */
/*--------------------------------------------------------------------*/
DISP:
  x   = msg('OFF')
  cmd = "LU "id                                               /* @AF */
  x = OUTTRAP('trash.')
  address TSO cmd                                             /* @AF */
  cmd_rc = rc
  x = OUTTRAP('OFF')
  if (erashow = 'YES') then                                   /* @AF */
     call SHOWCMD                                             /* @AF */
  x = msg('ON')
  if (cmd_rc = 0) then call RACFUSR id                        /* @AW */
  else call RACFGRP id
RETURN
/*--------------------------------------------------------------------*/
/*  Add permit option                                                 */
/*--------------------------------------------------------------------*/
ADDP:
  new = 'NO'
  if (id = 'NONE') then
     new = 'YES'
  from = ' '
  "DISPLAY PANEL("PANEL07")"                                  /* @AM */
  if (rc > 0) then
     return
  if (type = 'DISCRETE') then
     type = ' '
  idopt = ' '
  if (id <> ' ') then
     idopt = 'ID('ID') ACCESS('ACC')'
  fopt = ' '
  if (from <> ' ') then do
     fopt = "FROM('"FROM"') FCLASS("RCLASS") FGENERIC"
     rb   = 'YES'             /* Cause table rebuild */
  end
  call EXCMD "PERMIT "PROFILE" CLASS("RCLASS") ",
              idopt type fopt
  if (cmd_rc = 0) then do                                     /* @B4 */
     "TBMOD" tblb
     if (new = 'YES') then do
        id = 'NONE'
        "TBDELETE" tblb
     end
  end
  else do
     if (from <> ' ') then
        call racfmsgs 'ERR04' /* Permit Warning/Failed */     /* @AU */
     else
        call racfmsgs 'ERR05' /* Permit Failed */             /* @AU */
  end
RETURN
/*--------------------------------------------------------------------*/
/*  Delete permit option                                              */
/*--------------------------------------------------------------------*/
DELP:
  if (id = 'NONE') then
     return
  if (type = 'DISCRETE') then
     type = ' '
  msg    ='You are about to delete access for 'ID
  Sure_? = Confirm_request(msg)
  if (sure_? = 'YES') then do
     call EXCMD "PE "PROFILE" CLASS("RCLASS")",
                "ID("ID") DELETE" TYPE
     if (cmd_rc = 0) then                                     /* @B4 */
        "TBDELETE" tblb
     else
        call racfmsgs 'ERR06'     /* Permit Failed */         /* @AU */
  end
RETURN
/*--------------------------------------------------------------------*/
/*  Confirm delete                                                    */
/*--------------------------------------------------------------------*/
CONFIRM_REQUEST:
  signal off error
  arg message
  answer  = 'NO'
  zwinttl = 'CONFIRM REQUEST'
  ckey    = ''
  if (ERACONF ='NO') then ckey = 'ENTER'
  Do while (ckey <> 'PF03') & (ckey <> 'ENTER')
     "CONTROL NOCMD"                                          /* @AN */
     "ADDPOP"                                                 /* @AN */
     "DISPLAY PANEL("PANELM1")"                               /* @AM */
     "REMPOP"                                                 /* @AN */
  end
  Select
     when (ckey = 'PF03')  then answer = 'NO'
     when (ckey = 'ENTER') then answer = 'YES'
     otherwise nop
  End
  zwinttl = ' '
RETURN answer
/*--------------------------------------------------------------------*/
/*  Exec command                                                      */
/*--------------------------------------------------------------------*/
EXCMD:
  signal off error
  arg cmd
  x = OUTTRAP('msg.')
  address TSO cmd                                             /* @AQ */
  cmd_rc = rc
  x = OUTTRAP('OFF')
  if (erashow = 'YES') then                                   /* @AF */
     call SHOWCMD                                             /* @AF */
  if (subword(msg.1,1,1) = 'ICH11009I') |,
     (subword(msg.1,1,1) = 'ICH10006I') |,
     (subword(msg.1,1,1) = 'ICH06011I') then raclist = 'YES'
  else
     msg_var = 1 to msg.0
RETURN
/*--------------------------------------------------------------------*/
/*  List class's profile                                              */
/*--------------------------------------------------------------------*/
LISD:                                                         /* @A1 */
  WFDD    = "ERA"RANDOM(0,99999)                              /* @A1 */
  cmd = "RLIST "RCLASS PROFILE" AUTH"                         /* @AF */
  X = OUTTRAP("WFREC.")                                       /* @A1 */
  ADDRESS TSO cmd                                             /* @AF */
  cmd_rc = rc                                                 /* @AR */
  X = OUTTRAP("OFF")                                          /* @A1 */
  if (erashow = 'YES') then                                   /* @AF */
     call SHOWCMD                                             /* @AF */
  if (cmd_rc > 0) then do    /* Remove parms */               /* @B2 */
     cmd = "RLIST "RCLASS PROFILE                             /* @B2 */
     X = OUTTRAP("WFREC.")                                    /* @B2 */
     ADDRESS TSO cmd                                          /* @B2 */
     cmd_rc = rc                                              /* @B2 */
     X = OUTTRAP("OFF")                                       /* @B2 */
     if (erashow = 'YES') then                                /* @B2 */
        call SHOWCMD                                          /* @B2 */
  end                                                         /* @B2 */
  ADDRESS TSO "ALLOC F("WFDD") NEW REUSE",                    /* @A1 */
              "LRECL(132) BLKSIZE(0) RECFM(F B)",             /* @A1 */
              "UNIT(VIO) SPACE(1 5) CYLINDERS"                /* @A1 */
  ADDRESS TSO "EXECIO * DISKW "WFDD" (STEM WFREC. FINIS"      /* @A1 */
  "LMINIT DATAID(WFDATAID) DDNAME("WFDD")"                    /* @A1 */
  SELECT                                                      /* @AC */
     WHEN (ERADISP = "VIEW") THEN                             /* @AC */
          "VIEW DATAID("WFDATAID")"                           /* @AC */
     WHEN (ERADISP = "EDIT") THEN                             /* @AC */
          "EDIT DATAID("WFDATAID")"                           /* @AC */
     OTHERWISE                                                /* @AC */
          "BROWSE DATAID("WFDATAID")"                         /* @AC */
  END                                                         /* @AC */
  ADDRESS TSO "FREE FI("WFDD")"                               /* @A1 */
  DROP WFREC. WFDD                                            /* @A1 */
  if (cmd_rc > 0) then                                        /* @AZ */
     CALL racfmsgs "ERR10" /* Generic failure */              /* @AU */
RETURN                                                        /* @A1 */
/*--------------------------------------------------------------------*/
/*  Set boolean value for mask                                        */
/*--------------------------------------------------------------------*/
SETBOOL:
  variable = arg(1)                                           /* @A6 */
  offset   = arg(2)                                           /* @A6 */
  value    = arg(3)                                           /* @A6 */
  status1  = arg(4)                                           /* @A6 */
  status2  = arg(5)                                           /* @A6 */
  interpret "rcvtsta$= d2x((x2d("cvtrac"))+"offset")"         /* @A6 */
  x        = storage(rcvtsta$,1)                              /* @A6 */
  interpret variable '= 'status1                              /* @A6 */
  interpret "x=bitand(x,'"value"'x)" /*remove bad bits*/      /* @A6 */
  interpret "if (x= '"value"'x) then "variable"="status2      /* @A6 */
RETURN 0                                                      /* @A6 */
/*--------------------------------------------------------------------*/
/*  List group                                                        */
/*--------------------------------------------------------------------*/
LISP:                                                         /* @A2 */
  WFDD    = "ERA"RANDOM(0,99999)                              /* @A2 */
  WFLGPRM = "CSDATA DFP OMVS OVM TME"                         /* @A2 */
  cmd     = "LG "ID WFLGPRM                                   /* @AF */
  X = OUTTRAP("WFREC.")                                       /* @A2 */
  ADDRESS TSO cmd                                             /* @AF */
  cmd_rc = rc                                                 /* @AR */
  X = OUTTRAP("OFF")                                          /* @A2 */
  if (erashow = 'YES') then                                   /* @AF */
     call SHOWCMD                                             /* @AF */
  if (cmd_rc > 0) then do                                     /* @A8 */
     X = OUTTRAP("WFREC.")                                    /* @A2 */
     CMD     = "LU "ID                                        /* @AF */
     ADDRESS TSO cmd                                          /* @AR */
     cmd_rc = rc                                              /* @AR */
     X = OUTTRAP("OFF")                                       /* @A2 */
     if (erashow = 'YES') then                                /* @AF */
        call SHOWCMD                                          /* @AF */
  end                                                         /* @A8 */
  ADDRESS TSO "ALLOC F("WFDD") NEW REUSE",                    /* @A2 */
              "LRECL(132) BLKSIZE(0) RECFM(F B)",             /* @A2 */
              "UNIT(VIO) SPACE(1 5) CYLINDERS"                /* @A2 */
  ADDRESS TSO "EXECIO * DISKW "WFDD" (STEM WFREC. FINIS"      /* @A2 */
  "LMINIT DATAID(WFDATAID) DDNAME("WFDD")"                    /* @A2 */
  SELECT                                                      /* @AC */
     WHEN (ERADISP = "VIEW") THEN                             /* @AC */
          "VIEW DATAID("WFDATAID")"                           /* @AC */
     WHEN (ERADISP = "EDIT") THEN                             /* @AC */
          "EDIT DATAID("WFDATAID")"                           /* @AC */
     OTHERWISE                                                /* @AC */
          "BROWSE DATAID("WFDATAID")"                         /* @AC */
  END                                                         /* @AC */
  ADDRESS TSO "FREE FI("WFDD")"                               /* @A2 */
  DROP WFREC. WFDD WFLGPRM                                    /* @A2 */
  if (cmd_rc > 0) then                                        /* @B3 */
     CALL racfmsgs "ERR13"   /* Generic failure */            /* @AU */
RETURN                                                        /* @A2 */
/*--------------------------------------------------------------------*/
/*  Display RACF command                                          @AF */
/*--------------------------------------------------------------------*/
SHOWCMD:                                                      /* @AF */
  PARSE VAR CMD MSG1 60 MSG2 121 MSG3                         /* @AF */
  MSG4 = "Return code = "cmd_rc                               /* @AR */
  "ADDPOP ROW(6) COLUMN(4)"                                   /* @AN */
  "DISPLAY PANEL("PANELM2")"                                  /* @AM */
  "REMPOP"                                                    /* @AN */
RETURN                                                        /* @AF */
/*--------------------------------------------------------------------*/
/*  Create Table                                                  @AK */
/*--------------------------------------------------------------------*/
CREATE_TABLE:
  seconds = TIME('S')
  tbla    = 'TA'ZSCREEN||SECONDS  /* table unique */
  "TBCREATE" tbla "KEYS(PROFILE TYPE)",
                  "NAMES(RCLASS DATA) REPLACE NOWRITE"
  cmd = "SEARCH FILTER("RFILTER") CLASS("rclass")"            /* @AF */
  x = OUTTRAP('var.')
  address TSO cmd                                             /* @AF */
  cmd_rc = rc                                                 /* @AR */
  x = OUTTRAP('OFF')
  if (erashow = 'YES') then                                   /* @AF */
     call SHOWCMD                                             /* @AF */
  Do i = 1 to var.0
     temp    = var.i
     profile = SUBWORD(temp,1,1)
     t       = INDEX(temp,g)
     if (t > 0) then
        type = 'GEN'
     else do
        type = 'DISCRETE'
        msgr = SUBWORD(temp,1,1)
        Select
           when (msgr = 'ICH31005I') then do
                profile = 'NONE'     /* No profiles */
                type    = 'GEN'
           end
           when (msgr = 'ICH31009I') then do
                profile = 'INVALID'  /* Bad filter  */
                call racfmsgs 'ERR08'                         /* @AU */
           end
           when (msgr = 'ICH31012I') then do
                profile = 'INVALID'  /* Bad filter  */
                call racfmsgs 'ERR08'                         /* @AU */
           end
           when (msgr = 'ICH31014I') then do
                profile = 'INVALID'  /* Bad filter  */
                call racfmsgs 'ERR08'                         /* @AU */
           end
           when (msgr = 'ICH31016I') then do
                profile = 'INVALID'  /* Bad filter  */
                call racfmsgs 'ERR08'                         /* @AU */
           end
           when (msgr = 'ICH31017I') then do
                profile = 'INVALID'  /* Bad filter  */
                call racfmsgs 'ERR08'                         /* @AU */
           end
           when (msgr= 'ICH31018I') then do
                profile = 'INVALID'  /* Bad filter  */
                call racfmsgs 'ERR08'                         /* @AU */
           end
           when (msgr = 'IKJ56716I') then do
                profile = 'INVALID'  /* Bad filter  */
                call racfmsgs 'ERR08'                         /* @AU */
           end
           when (substr(msgr,1,6) = 'ICH310') then do
                type = ' '           /* Misc. errs  */
                call racfmsgs 'ERR09'                         /* @AU */
           end
           otherwise nop
        End  /* Select */
     end  /* Else */
     /*---------------------------------------------*/
     /* Display number of records retrieved        -*/
     /*---------------------------------------------*/
     IF (ERASINT <> 0) THEN DO     /* Status interval */      /* @AA */
        IF (I//ERASINT = 0) THEN DO                           /* @AA */
           n1 = i; n2 = var.0
           "control display lock"
           "display msg(RACF013)"
        END                                                   /* @AA */
     END                                                      /* @AA */
     /* Get Further information */
     call GETD
     "TBMOD" tbla
  end  /* Do i=1 to var.0 */
  if (profile = 'INVALID') then do
     "TBEND" tbla
     return
  end
RETURN                                                        /* @AK */
