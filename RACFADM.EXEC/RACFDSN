/*%NOCOMMENT====================* REXX *==============================*/
/*  PURPOSE:  RACFADM - Dataset (Option 3)                            */
/*--------------------------------------------------------------------*/
/* FLG  YYMMDD  USERID   DESCRIPTION                                  */
/* ---  ------  -------  -------------------------------------------- */
/* @BK  200324  RACFA    Allow both display/logging of RACF commands  */
/* @BJ  200324  RACFA    Allow logging RACF commands to ISPF Log file */
/* @BI  200316  RACFA    Prevent typing in 'L' line cmd next to '*'   */
/* @BH  200315  RACFA    Added line cmd 'P=Profile'                   */
/* @BG  200305  TRIDJK   TBDELETE if cmd_rc = 0 on DELDSD command     */
/* @BF  200303  RACFA    Chg 'ret_code' to 'cmd_rc' after EXCMD       */
/* @BE  200303  RACFA    Chg 'RL class ALL' to 'RL class * ALL'       */
/* @BD  200303  RACFA    Fixed chking RC and removed TBMOD, not needed*/
/* @BC  200303  RACFA    Chk RC 'LD dsn prms', if RC>0 then 'LD dsn'  */
/* @BB  200303  RACFA    Removed TBMOD in LISP procedure, not needed  */
/* @BA  200302  RACFA    Del TBTOP cmd, prior to TBSCAN for LOCATE    */
/* @B9  200301  RACFA    When grp/ids (RACFUSR5) don't display D-DSN  */
/* @B8  200301  RACFA    Display msg when id is an asterisk (*)       */
/* @B7  200301  RACFA    Fixed displaying userids, was ret_code       */
/* @B6  200301  RACFA    Del EMSG procedure, instead call racfmsgs    */
/* @B5  200228  RACFA    Check for 'NO ENTRIES MEET SEARCH CRITERIA'  */
/* @B4  200227  RACFA    Added line command 'D', display user datasets*/
/* @B3  200226  RACFA    Fix @AZ chg, chg ret_code to cmd_rc          */
/* @B2  200226  RACFA    Fixed 'L List' cmd, added single quotes      */
/* @B1  200226  RACFA    Added 'CONTROL ERRORS RETURN'                */
/* @AZ  200226  RACFA    Added 'Return Code =' when displaying cmd    */
/* @AY  200226  RACFA    Removed double quotes before/after cmd       */
/* @AX  200226  RACFA    Del address TSO "PROFILE PREF("USERID()")"   */
/* @AW  200226  RACFA    Removed 'ADDRESS TSO PROF NOPREFIX'          */
/* @AV  200224  RACFA    Standardize quotes, chg single to double     */
/* @AU  200224  RACFA    Place panels at top of REXX in variables     */
/* @AT  200223  RACFA    Fixed SORTed color column                    */
/* @AS  200223  RACFA    Fixed SORT DATASET                           */
/* @AR  200223  RACFA    Simplified SORT, removed FLD/DFL_SORT vars   */
/* @AQ  200222  RACFA    Allowing abbreviating the column in SORT cmd */
/* @AP  200222  RACFA    Removed translating OPTA/B, not needed       */
/* @AO  200222  RACFA    Allow placing cursor on row and press ENTER  */
/* @AN  200222  RACFA    Added primary commands 'SORT'                */
/* @AM  200221  RACFA    Added primary commands 'LOCATE'              */
/* @AL  200221  RACFA    Added primary commands 'ONLY' and 'RESET'    */
/* @AK  200221  RACFA    Removed "G = '(G)'", not referenced          */
/* @AJ  200221  RACFA    Make 'ADDRESS ISPEXEC' defualt, reduce code  */
/* @AI  200220  RACFA    Fixed displaying all RACF commands           */
/* @AH  200220  RACFA    Added ERATRACE=YES, then TRACE R             */
/* @AG  200220  RACFA    Removed initializing ERASINT variable        */
/* @AF  200220  RACFA    Added capability to browse/edit/view file    */
/* @AE  200218  RACFA    Use dynamic area to display SELECT commands  */
/* @AD  200218  RACFA    Added 'Status Interval' option               */
/* @AC  200123  RACFA    Retrieve default filter, Option 0 - Settings */
/* @AB  200123  TRIDJK   If LG fails, then issue a LU                 */
/* @AA  200120  TRIDJK   Fixed displaying NOWARNING                   */
/* @A9  200120  TRIDJK   Chged 'subword(temp,4,1)', was (temp,5,1)    */
/* @A8  200120  RACFA    Removed 'say msg.msg_var' in EXCMD procedure */
/* @A7  200119  RACFA    Standardized/reduced lines of code           */
/* @A6  200119  RACFA    Added comment box above procedures           */
/* @A5  200118  RACFA    Added line command 'L' to list userid        */
/* @A4  200118  RACFA    Fixed NOPREF issue with users TSO PROFILE    */
/* @A3  200117  RACFA    Only 'Refresh Generic Class' if chg was made */
/* @A2  200117  RACFA    Adjusted DISPLAY code                        */
/* @A1  200110  RACFA    Added line command 'L' to list dataset       */
/* @A0  011229  NICORIZ  Created REXX, V2.1, www.rizzuto.it           */
/*====================================================================*/
PANEL01 = "RACFDSN1"    /* Set filter, menu option 3       */ /* @AU */
PANEL02 = "RACFDSN2"    /* List profiles and types         */ /* @AU */
PANEL03 = "RACFDSN3"    /* Add profile                     */ /* @AU */
PANEL04 = "RACFDSN4"    /* Change profile                  */ /* @AU */
PANEL05 = "RACFDSN5"    /* Show groups and access          */ /* @AU */
PANEL06 = "RACFDSN6"    /* Change access                   */ /* @AU */
PANEL07 = "RACFDSN7"    /* Add access                      */ /* @AU */
PANELM1 = "RACFMSG1"    /* Confirm Request (pop-up)        */ /* @AU */
PANELM2 = "RACFMSG2"    /* Execute RACF Command (pop-up)   */ /* @AU */

ADDRESS ISPEXEC                                               /* @AJ */
  Rclass = 'DATASET'
  "CONTROL ERRORS RETURN"                                     /* @B1 */
  "VGET (ZSCREEN ERASHOW ERATRACE ERAFLTR",                   /* @AD */
         "ERAADMN ERASINT ERADISP) ASIS"                      /* @AF */
  If (eratrace = 'YES') then Trace r                          /* @AH */
  If (ERAADMN = "YES") then do                                /* @B2 */
      SELCMDS2 = "ÝS¨Show,ÝL¨List,ÝD¨Dsn,ÝC¨Change,"||,       /* @B9 */
                 "ÝA¨Add,ÝR¨Remove"                           /* @B4 */
      SELCMDS5 = "ÝS¨Show,ÝL¨List,ÝP¨Profile,"||,             /* @BH */
                 "ÝC¨Change,ÝA¨Add,ÝR¨Remove"                 /* @BH */
  end
  else do
      SELCMDS2 = "ÝS¨Show,ÝL¨list,ÝD¨Dsn"                     /* @B9 */
      SELCMDS5 = "ÝS¨Show,ÝL¨list"                            /* @B9 */
  end
  Rfilter = ERAFLTR                                           /* @AC */
  rlv = SYSVAR('SYSLRACF')
  chgsmade = 'N'                                              /* @A3 */
  "DISPLAY PANEL("PANEL01")"                                  /* @AU */
  Do while (rc = 0)
     call Profl
     "DISPLAY PANEL("PANEL01")"                               /* @AU */
  End
  If (chgsmade = "Y") then Do                                 /* @A3 */
     msg='You are about to refresh the generic class: 'rclass /* @A3 */
     Sure_? = Confirm_request(msg)                            /* @A3 */
     If (Sure_? = 'YES') then                                 /* @A3 */
        call EXCMD "SETROPTS GENERIC(DATASET)"                /* @A3 */
  End                                                         /* @A3 */
EXIT
/*--------------------------------------------------------------------*/
/*  Show all profiles for a filter                                    */
/*--------------------------------------------------------------------*/
PROFL:
  call create_table
  if (dataset = 'INVALID') | (dataset = 'NO') THEN DO         /* @B5 */
     "TBEND" tbla
     if (cmd_rc > 0) then DO                                  /* @B5 */
        call racfmsgs 'ERR16'                                 /* @B5 */
        RETURN                                                /* @B5 */
     END                                                      /* @B5 */
     return
  end
  /* profiles table display section */
  opta = ' '
  sort = 'DATASET,C,A'                                        /* @AR */
  CLRDATA = "TURQ";  CLRTYPE = "GREEN"   /* Col. colors */    /* @AN */
  "TBSORT " tbla "FIELDS("sort")"                             /* @AR */
  "TBTOP  " tbla
  "TBDISPL" tbla "PANEL("PANEL02")"                           /* @AU */
  reta = rc
  do while (reta < 8)   /* tablea panel */
     "CONTROL DISPLAY SAVE"
     xtdtop = ztdtop
     lparm  = ""                                              /* @AM */
     PARSE VAR ZCMD ZCMD PARM SEQ                             /* @AN */
     IF (SROW <> "") & (SROW <> 0) THEN                       /* @AO */
        IF (SROW > 0) THEN DO                                 /* @AO */
           "TBTOP " TBLA                                      /* @AO */
           "TBSKIP" TBLA "NUMBER("SROW")"                     /* @AO */
        END                                                   /* @AO */
     Select                                                   /* @AL */
        WHEN (ABBREV("SORT",ZCMD,1) = 1) THEN DO              /* @AN */
             xtdtop   = 1                                     /* @AN */
             if (seq = 'A') | (seq = 'D') then                /* @AN */
                nop                                           /* @AN */
             else                                             /* @AN */
                seq = 'A'                                     /* @AN */
             SELECT                                           /* @AN */
                when (ABBREV("PROFILE",PARM,1) = 1) then      /* @AQ */
                     sort = 'DATASET,C,'seq                   /* @AS */
                when (ABBREV("TYPE",PARM,1) = 1) then         /* @AQ */
                     sort = 'TYPE,C,'seq                      /* @AR */
                otherwise NOP                                 /* @AN */
             END                                              /* @AN */
        END                                                   /* @AN */
        WHEN (ABBREV("LOCATE",ZCMD,1) = 1) THEN               /* @AM */
             lparm = parm                                     /* @AM */
        WHEN (ABBREV("ONLY",ZCMD,1) = 1) THEN DO              /* @AL */
             find_str = translate(parm)                       /* @AL */
             'tbtop ' tbla                                    /* @AL */
             'tbskip' tbla                                    /* @AL */
             do forever                                       /* @AL */
                str = translate(dataset type)                 /* @AL */
                if (pos(find_str,str) > 0) then nop           /* @AL */
                else 'tbdelete' tbla                          /* @AL */
                'tbskip' tbla                                 /* @AL */
                if (rc > 0) then do                           /* @AL */
                   'tbtop' tbla                               /* @AL */
                   leave                                      /* @AL */
                end                                           /* @AL */
             end                                              /* @AL */
        END                                                   /* @AL */
        WHEN (ABBREV("RESET",ZCMD,1) = 1) THEN DO             /* @AL */
             sort = 'DATASET,C,A'                             /* @AR */
             call create_table                                /* @AL */
             xtdtop   = 1                                     /* @AL */
        END                                                   /* @AL */
        otherwise NOP                                         /* @AM */
     END /* Select */                                         /* @AL */
     Select
        when (opta = 'A') then call Addd
        when (opta = 'C') then call Chgd
        when (opta = 'D')  then do                            /* @B4 */
             "CONTROL DISPLAY SAVE"                           /* @B4 */
             "SELECT PGM(ISRDSLST)",                          /* @B4 */
                     "PARM(DSL '"dataset"')",                 /* @B4 */
                     "SUSPEND SCRNAME(DSL)"                   /* @B4 */
             "CONTROL DISPLAY RESTORE"                        /* @B4 */
        end                                                   /* @B4 */
        when (opta = 'L') then call Lisd                      /* @A1 */
        when (opta = 'R') then call Deld
        when (opta = 'S') then call Disd
        otherwise nop
     End
     Do while (reta = 4)   /* process multi selection */
        "CONTROL DISPLAY RESTORE"
        "TBDISPL" tbla
        reta = rc
        "CONTROL DISPLAY SAVE"
        Select
           when (opta = 'A') then call Addd
           when (opta = 'C') then call Chgd
           when (opta = 'D')  then do                         /* @B4 */
                "CONTROL DISPLAY SAVE"                        /* @B4 */
                "SELECT PGM(ISRDSLST)",                       /* @B4 */
                        "PARM(DSL '"dataset"')",              /* @B4 */
                        "SUSPEND SCRNAME(DSL)"                /* @B4 */
                "CONTROL DISPLAY RESTORE"                     /* @B4 */
           end                                                /* @B4 */
           when (opta = 'L') then call Lisd
           when (opta = 'R') then call Deld
           when (opta = 'S') then call Disd
           otherwise nop
        End
     end  /* Do while (reta < 4) */
     opta = ' '
     PARSE VAR SORT LOCARG "," .                              /* @AR */
     CLRDATA = "GREEN"; CLRTYPE = "GREEN"                     /* @AT */
     INTERPRET "CLR"SUBSTR(LOCARG,1,4)" = 'TURQ'"             /* @AN */
     "TBSORT" tbla "FIELDS("sort")"                           /* @AN */
     "TBTOP " tbla
     if (lparm <> '') then do                                 /* @AM */
        ASTERICK = "*"                                        /* @AM */
        INTERPRET LOCARG" = lparm||ASTERICK"                  /* @AM */
        PARSE VAR SORT . "," . "," SEQ                        /* @AR */
        IF (SEQ = "D") THEN                                   /* @AM */
           CONDLIST = "LE"                                    /* @AM */
        ELSE                                                  /* @AM */
           CONDLIST = "GE"                                    /* @AM */
        "TBSCAN "tbla,                                        /* @AM */
                "ARGLIST("LOCARG") CONDLIST("CONDLIST")"      /* @AM */
     end                                                      /* @AM */
     else                                                     /* @AM */
        "TBSKIP" tbla "NUMBER("XTDTOP")"
     "CONTROL DISPLAY RESTORE"
     "TBDISPL" tbla "PANEL("PANEL02")"                        /* @AU */
     reta = rc
  end  /* Do while (reta < 8) */
RETURN
/*--------------------------------------------------------------------*/
/*  Add new profile                                                   */
/*--------------------------------------------------------------------*/
ADDD:
  chgsmade = "Y"                                              /* @A3 */
  new      = 'NO'
  if (dataset = 'NONE') then
     new = 'YES'
  else
     CALL Getd
  "DISPLAY PANEL("PANEL03")"                                  /* @AU */
  if (rc > 0) then
     return
  if (type = 'DISCRETE') then
     type = ' '
  aud = ' '
  if (fail <> ' ') then
     aud = 'FAILURES('FAIL')'
  if (succ <> ' ') then
     aud = 'SUCCESS('SUCC')' aud
  if (aud <> ' ') then
     aud = 'AUDIT('AUD')'
  wrn = ' '
  if (warn = 'YES') then
     wrn = 'WARNING'
  if (warn = 'NO') then                                       /* @AA */
     wrn = 'NOWARNING'                                        /* @AA */
  xtr = ' '
  if (data <> ' ') then
     xtr = xtr "DATA('"data"')"
  call EXCMD "ADDSD '"DATASET"' OWN("OWNER")",                          wrn
             "UACC("UACC")" type aud xtr                                wrn
  if (cmd_rc > 0) then do                                     /* @BE */
     CALL racfmsgs 'ERR01' /* Add DSD failed */               /* @B6 */
     return
  end
  x = msg('OFF')
  call EXCMD "PERMIT '"DATASET"' ID("USERID()")",
             "DELETE" TYPE
  x = msg('ON')
  if (from <> ' ') then do
     fopt = "FROM('"FROM"') FCLASS(DATASET) FGENERIC"
     call EXCMD "PERMIT '"DATASET"'" TYPE FOPT
     if (cmd_rc > 0) then                                     /* @BE */
        CALL racfmsgs 'ERR04' /* Permit Warn */               /* @B6 */
  end
  if (type = ' ') then
     type = 'DISCRETE'
  "TBMOD" TBLA
  if (new = 'YES') then do
     dataset = 'NONE'
     type    = 'GEN'
     "TBDELETE" TBLA
  end
RETURN
/*--------------------------------------------------------------------*/
/*  Change profile                                                    */
/*--------------------------------------------------------------------*/
CHGD:
  chgsmade = "Y"                                              /* @A3 */
  if (dataset = 'NONE') then
     return
  CALL Getd
  "DISPLAY PANEL("PANEL04")"                                  /* @AU */
  if (rc > 0) then return
  if (type = 'DISCRETE') then
     type = ' '
  own = ' '
  if (owner <> ' ') then
     own = 'OWNER('OWNER')'
  uc = ' '
  if (uacc <> ' ') then
     uc = 'UACC('UACC')'
  aud = ' '
  wrn = ' '
  if (warn  = 'YES') then
     wrn = 'WARNING'
  if (warn  = 'NO') then                                      /* @AA */
     wrn = 'NOWARNING'                                        /* @AA */
  if (fail <> ' ') then
     aud = 'FAILURES('FAIL')'
  if (succ <> ' ') then
     aud = 'SUCCESS('SUCC')' aud
  if (aud  <> ' ') then
     aud = 'AUDIT('AUD')'
  xtr = ' '
  if (data <> ' ') then do
     if (data = 'NONE') then
        data = ' '
     xtr = xtr "DATA('"DATA"')"
  end
  msg = "ALTDSD '"DATASET"'" own uc type aud xtr wrn
  call EXCMD "ALTDSD '"DATASET"'" own uc type aud xtr wrn
  if (cmd_rc > 0) then                                        /* @BE */
     call racfmsgs 'ERR07' /* Altdsd failed */                /* @B6 */
  else do
     if (type = ' ') then
        type = 'DISCRETE'
     "tbmod" tbla
  end
RETURN
/*--------------------------------------------------------------------*/
/*  Delete profile                                                    */
/*--------------------------------------------------------------------*/
DELD:
  chgsmade = "Y"                                              /* @A3 */
  if (dataset = 'NONE') then
     return
  if (type = 'DISCRETE') then
     type = ' '
  msg    = 'You are about to delete 'dataset
  Sure_? = Confirm_request(msg)
  if (sure_? = 'YES') then do
     call EXCMD "DELDSD '"DATASET"'" type
     if (cmd_rc > 0) then do                                  /* @BE */
        if (type = ' ') then
           type = 'DISCRETE'
        CALL racfmsgs "ERR02" /* Del DSD failed */            /* @BG */
        return                                                /* @BG */
     end
     else
        "TBDELETE" TBLA                                       /* @BG */
  end
RETURN
/*--------------------------------------------------------------------*/
/*  Display profile permits                                           */
/*--------------------------------------------------------------------*/
DISD:
  if (dataset = 'NONE') then
     return
  Do until (RB = 'NO')      /* allow rebuild option */
     tblb = 'RCFDB'ZSCREEN  /* make table unique    */
     "TBCREATE" TBLB "KEYS(ID) NAMES(ACC)",
                     "REPLACE NOWRITE"
     flags = 'OFF'
     audit = ' '
     owner = ' '
     warn  = ' '
     uacc  = ' '
     data  = ' '
     if (type = 'DISCRETE') then
        type = ' '
     cmd = "LISTDSD DA('"DATASET"') AUTH"                     /* @AI */
     x = OUTTRAP('VAR.')
     address TSO cmd                                          /* @AI */
     cmd_rc = rc                                              /* @AZ */
     x = OUTTRAP('OFF')
     if (erashow <> 'NO') then                                /* @BJ */
        call SHOWCMD                                          /* @AI */
     if (type = ' ') then
        type = 'DISCRETE'
     Do i = 1 to var.0          /* Scan output */
        temp = var.i
        if (rlv > '1081') then  /* RACF 1.9 add blank */
           temp = ' 'temp
        l = LENGTH(temp)
        if (uacc= ' ') then
           if (substr(temp,2,12)= 'LEVEL  OWNER') then do
              i     = i + 2
              temp  = var.i
              owner = subword(temp,2,1)
              uacc  = subword(temp,3,1)
              warn  = subword(temp,4,1)                       /* @A9 */
           end
        if (audit = ' ') then
           if (substr(temp,2,8) = 'AUDITING') then do
              i     = i + 2
              temp  = var.i
              audit = subword(temp,1,1)
           end
        if (data = ' ') then
           if (substr(temp,2,17) = 'INSTALLATION DATA') then do
              i    = i + 2
              temp = var.i
              data = temp
              i    = i + 1
              temp = var.i
              data = data || substr(temp,2)
           end
        if (flags = 'ON') then do
           if (l = 1) | (l = 2) then
              flags = 'OUT'     /* end of access list */
           if (l > 8) then
              if (substr(temp,1,9) = ' ') then
                 flags = 'OUT'  /* end of access list */
        end
        if (flags = 'ON') then do
           if (substr(temp,2,10) = 'NO ENTRIES') then do
              id  = 'NONE'        /* empty access list */
              acc = 'DEFINED'
           end
           else do
              id  = subword(temp,1,1)
              acc = subword(temp,2,1)
           end
           "TBMOD" tblb
        end
        if (substr(temp,5,13) = 'ID     ACCESS') then do
           flags = 'ON'      /* start of access list */
           i     = i + 1     /* skip */
        end
     end  /* Loop scan output */

     /* Permit table display section */
     rb   = 'NO'
     optb = ' '
     "TBTOP  " tblb
     "TBDISPL" tblb "PANEL("PANEL05")"                        /* @AU */
     retb = rc
     Do while (retb < 8)        /* tableb panel */
        "CONTROL DISPLAY SAVE"
        IF (SROW <> "") & (SROW <> 0) THEN                    /* @AO */
           IF (SROW > 0) THEN DO                              /* @AO */
              "TBTOP " TBLB                                   /* @AO */
              "TBSKIP" TBLB "NUMBER("SROW")"                  /* @AO */
           END                                                /* @AO */
        Select
           when (optb = 'A') then call Addp
           when (optb = 'C') then call Chgp
           when (optb = 'L') then call Lisp                   /* @A5 */
           when (optb = 'P') then                             /* @BH */
                call RACFPROF 'GROUP' id                      /* @BH */
           when (optb = 'R') then call Delp
           when (optb = 'S') then call Disp
           otherwise nop
        End
        Do while (retb = 4)   /* process multi section */
           "CONTROL DISPLAY RESTORE"
           "TBDISPL" tblb
           retb = rc
           "CONTROL DISPLAY SAVE"
           Select
              when (optb = 'A') then call Addp
              when (optb = 'C') then call Chgp
              when (optb = 'L') then call Lisp                /* @A5 */
              when (optb = 'P') then                          /* @BH */
                   call RACFPROF 'GROUP' id                   /* @BH */
              when (optb = 'R') then call Delp
              when (optb = 'S') then call Disp
              otherwise nop
           End
        end  /* While retb= 4 */
        optb = ' '
        "CONTROL DISPLAY RESTORE"
        "TBTOP " tblb
        "TBSKIP" tblb "NUMBER("ZTDTOP")"
        if (rb = "YES") then
           retb = 12         /* rebuild table required */
        else do
           "TBDISPL" tblb "PANEL("PANEL05")"                  /* @AU */
           retb = rc
        end
     end  /* While retb< 8 */
     "TBEND" tblb
  end  /* Do until */
RETURN
/*--------------------------------------------------------------------*/
/*  Get LISTDSD info to initialize add or change option               */
/*--------------------------------------------------------------------*/
GETD:
  flags = 'OFF'
  owner = ' '
  warn  = ' '
  uacc  = ' '
  audit = ' '
  data  = ' '
  cmd   = "LISTDSD DA('"DATASET"')"                           /* @AI */
  x = OUTTRAP('VAR.')
  address TSO cmd                                             /* @AI */
  cmd_rc = rc                                                 /* @AZ */
  x = OUTTRAP('OFF')
  if (erashow <> 'NO') then                                   /* @BJ */
     call SHOWCMD                                             /* @AI */
  Do i = 1 to var.0 while (flags <> 'OUT') /* Scan output */
     temp = var.i
     if (rlv > '1081') then  /* RACF 1.9 add blank */
        temp = ' 'temp
     if (uacc = ' ') then
        if (substr(temp,2,12) = 'LEVEL  OWNER') then do
           i     = i + 2
           temp  = var.i
           owner = subword(temp,2,1)
           uacc  = subword(temp,3,1)
           warn  = subword(temp,4,1)                          /* @A9 */
        end
     if (audit = ' ') then
        if (substr(temp,2,8) = 'AUDITING') then do
           i     = i + 2
           temp  = var.i
           audit = subword(temp,1,1)
        end
     if (data = ' ') then
        if (substr(temp,2,17) = 'INSTALLATION DATA') then do
           i    = i + 2
           temp = var.i
           if (rlv > '1081') then  /* RACF 1.9 add blank */
              temp = ' 'temp
           data = subword(temp,1)
           i    = i + 1
           temp = var.i
           if (rlv > '1081') then  /* RACF 1.9 add blank */
              temp = ' 'temp
           data = data || substr(temp,2)
        end
  end /* i= 1 do */
  a = INDEX(audit,'ALL')
  if (a > 0) then do
     fail = substr(audit,a+4,7)
     succ = substr(audit,a+4,7)
  end
  else do
     f = INDEX(audit,'FAILURES')
     if (f > 0) then
        fail = substr(audit,f+9,7)
     s = INDEX(audit,'SUCCESS')
     if (s > 0) then
        succ = substr(audit,s+8,7)
  end
RETURN
/*--------------------------------------------------------------------*/
/*  Change permit option                                              */
/*--------------------------------------------------------------------*/
CHGP:
  If (id = 'NONE') then
     return
  "DISPLAY PANEL("PANEL06")"                                  /* @AU */
  if (rc > 0) then
     return
  if (type = 'DISCRETE') then
     type = ' '
  call EXCMD "PERMIT '"DATASET"' ID("ID") ACC("ACC")" TYPE
  if (cmd_rc > 0) then do                                     /* @BE */
     if (type = ' ') then
        type = 'DISCRETE'
     "TBMOD" tblb
  end
  else
     Call racfmsgs 'ERR03' /* permit failed */                /* @B6 */
RETURN
/*--------------------------------------------------------------------*/
/*  Add permit option                                                 */
/*--------------------------------------------------------------------*/
ADDP:
  new = 'NO'
  if (id = 'NONE') then
     new = 'YES'
  from = ' '
  "DISPLAY PANEL("PANEL07")"                                  /* @AU */
  if (rc > 0) then
     return
  if (type = 'DISCRETE') then
     type = ' '
  idopt = ' '
  if (id <> ' ') then
     idopt = 'ID('ID') ACCESS('ACC')'
  fopt = ' '
  if (from <> ' ') then do
     fopt = "FROM('"FROM"') FCLASS(DATASET) FGENERIC"
     rb   = 'YES'             /* Cause table rebuild */
  end
  call EXCMD "PERMIT '"DATASET"'" idopt type fopt
  if (cmd_rc > 0) then do                                     /* @BE */
     "TBMOD" tblb
     if (new = 'YES') then do
        id = 'NONE'
        "TBDELETE" tblb
     end
  end
  else do
     if (from <> ' ') then
        call racfmsgs 'ERR04' /* Permit Warning/Failed */     /* @B6 */
     else
        call racfmsgs 'ERR05' /* Permit Failed */             /* @B6 */
  end
RETURN
/*--------------------------------------------------------------------*/
/*  Delete permit option                                              */
/*--------------------------------------------------------------------*/
DELP:
  if (id = 'NONE') then
     return
  if (type = 'DISCRETE') then
     type = ' '
  msg    = 'You are about to delete access for 'ID
  Sure_? = Confirm_request(msg)
  if (sure_? = 'YES') then do
     call EXCMD "PERMIT '"DATASET"' ID("ID") DELETE" TYPE
     if (cmd_rc > 0) then                                     /* @BE */
        "TBDELETE" tblb
     else
        call racfmsgs 'ERR06' /* Permit Failed */             /* @B6 */
  end
RETURN
/*--------------------------------------------------------------------*/
/*  Display userid                                                    */
/*--------------------------------------------------------------------*/
DISP:
  if (id = "*") then do  /* Wild card - All other entries */  /* @B8 */
     call RACFMSGS ERR17                                      /* @B8 */
     return                                                   /* @B8 */
  end                                                         /* @B8 */
  x   = msg('OFF')
  cmd = "LU "id                                               /* @AI */
  x = OUTTRAP('trash.')
  address TSO cmd                                             /* @AI */
  cmd_rc = rc
  x = OUTTRAP('OFF')
  if (erashow <> 'NO') then                                   /* @BJ */
     call SHOWCMD                                             /* @AI */
  x = msg('ON')
  if (cmd_rc = 0) then call RACFUSR id                        /* @B7 */
  else call RACFGRP id
RETURN
/*--------------------------------------------------------------------*/
/*  Confirm delete                                                    */
/*--------------------------------------------------------------------*/
CONFIRM_REQUEST:
  signal off error
  arg message
  answer  = 'NO'
  zwinttl = 'CONFIRM REQUEST'
  Do until (ckey = 'PF03') | (ckey = 'ENTER')
     "CONTROL NOCMD"                                          /* @AV */
     "ADDPOP"                                                 /* @AV */
     "DISPLAY PANEL("PANELM1")"                               /* @AU */
     "REMPOP"                                                 /* @AV */
  end
  select
     when (ckey = 'PF03')  then answer = 'NO'
     when (ckey = 'ENTER') then answer = 'YES'
     otherwise nop
  End
  zwinttl = ' '
RETURN answer
/*--------------------------------------------------------------------*/
/*  Exec command                                                      */
/*--------------------------------------------------------------------*/
EXCMD:
  signal off error
  arg cmd
  x = OUTTRAP('msg.')
  address TSO cmd                                             /* @AY */
  cmd_rc = rc
  x = OUTTRAP('OFF')
  if (erashow <> 'NO') then                                   /* @BJ */
     call SHOWCMD                                             /* @AI */
  if (subword(msg.1,1,1) = 'ICH11009I') |,
     (subword(msg.1,1,1) = 'ICH10006I') |,
     (subword(msg.1,1,1) = 'ICH06011I') then raclist = 'YES'
  else
     msg_var = 1 to msg.0
RETURN
/*--------------------------------------------------------------------*/
/*  List dataset                                                      */
/*--------------------------------------------------------------------*/
LISD:                                                         /* @A1 */
  WFDD    = "ERA"RANDOM(0,99999)                              /* @A1 */
  WFLDPRM = "ALL"                                             /* @A1 */
  CMD     = "LISTDSD DATASET('"DATASET"')" WFLDPRM            /* @B2 */
  X = OUTTRAP("WFREC.")                                       /* @A1 */
  ADDRESS TSO cmd                                             /* @AI */
  cmd_rc = rc                                                 /* @AZ */
  X = OUTTRAP("OFF")                                          /* @A1 */
  if (erashow <> 'NO') then                                   /* @BJ */
     call SHOWCMD                                             /* @AI */
  if (cmd_rc > 0) then do   /* Remove parms */                /* @BC */
     CMD = "LISTDSD DATASET('"DATASET"')"                     /* @BC */
     X   = OUTTRAP("WFREC.")                                  /* @BC */
     ADDRESS TSO cmd                                          /* @BC */
     cmd_rc = rc                                              /* @BC */
     X   = OUTTRAP("OFF")                                     /* @BC */
     if (erashow <> 'NO') then                                /* @BJ */
        call SHOWCMD                                          /* @BC */
  end                                                         /* @BC */
  ADDRESS TSO "ALLOC F("WFDD") NEW REUSE",                    /* @A1 */
              "LRECL(132) BLKSIZE(0) RECFM(F B)",             /* @A1 */
              "UNIT(VIO) SPACE(1 5) CYLINDERS"                /* @A1 */
  ADDRESS TSO "EXECIO * DISKW "WFDD" (STEM WFREC. FINIS"      /* @A1 */
  "LMINIT DATAID(WFDATAID) DDNAME("WFDD")"                    /* @A1 */
  SELECT                                                      /* @AF */
     WHEN (ERADISP = "VIEW") THEN                             /* @AF */
          "VIEW DATAID("WFDATAID")"                           /* @AF */
     WHEN (ERADISP = "EDIT") THEN                             /* @AF */
          "EDIT DATAID("WFDATAID")"                           /* @AF */
     OTHERWISE                                                /* @AF */
          "BROWSE DATAID("WFDATAID")"                         /* @AF */
  END                                                         /* @AF */
  ADDRESS TSO "FREE FI("WFDD")"                               /* @A1 */
  DROP WFREC. WFDD WFLDPRM                                    /* @A1 */
  if (cmd_rc > 0) then                                        /* @BD */
     CALL racfmsgs "ERR10" /* Generic failure */              /* @B6 */
RETURN                                                        /* @A1 */
/*--------------------------------------------------------------------*/
/*  List group                                                        */
/*--------------------------------------------------------------------*/
LISP:                                                         /* @A5 */
  if (id = "*") then do  /* Wild card - All other entries */  /* @BI */
     call RACFMSGS ERR17                                      /* @BI */
     return                                                   /* @BI */
  end                                                         /* @BI */
  WFDD    = "ERA"RANDOM(0,99999)                              /* @A5 */
  WFLGPRM = "CSDATA DFP OMVS OVM TME"                         /* @A5 */
  CMD     = "LG "ID WFLGPRM                                   /* @AI */
  X = OUTTRAP("WFREC.")                                       /* @A5 */
  ADDRESS TSO cmd                                             /* @AI */
  cmd_rc = rc                                                 /* @AZ */
  X = OUTTRAP("OFF")                                          /* @A5 */
  if erashow <> 'NO' then                                     /* @BJ */
     call SHOWCMD                                             /* @AI */
  if (cmd_rc > 0) then do   /* Remove parms */                /* @AB */
     X = OUTTRAP("WFREC.")                                    /* @AI */
     CMD     = "LU "ID                                        /* @AI */
     ADDRESS TSO cmd                                          /* @AI */
     cmd_rc = rc                                              /* @AB */
     if (erashow <> 'NO') then                                /* @BJ */
        call SHOWCMD                                          /* @AI */
     X = OUTTRAP("OFF")                                       /* @AI */
  end                                                         /* @AB */
  ADDRESS TSO "ALLOC F("WFDD") NEW REUSE",                    /* @A5 */
              "LRECL(132) BLKSIZE(0) RECFM(F B)",             /* @A5 */
              "UNIT(VIO) SPACE(1 5) CYLINDERS"                /* @A5 */
  ADDRESS TSO "EXECIO * DISKW "WFDD" (STEM WFREC. FINIS"      /* @A5 */
  "LMINIT DATAID(WFDATAID) DDNAME("WFDD")"                    /* @A5 */
  SELECT                                                      /* @AF */
     WHEN (ERADISP = "VIEW") THEN                             /* @AF */
          "VIEW DATAID("WFDATAID")"                           /* @AF */
     WHEN (ERADISP = "EDIT") THEN                             /* @AF */
          "EDIT DATAID("WFDATAID")"                           /* @AF */
     OTHERWISE                                                /* @AF */
          "BROWSE DATAID("WFDATAID")"                         /* @AF */
  END                                                         /* @AF */
  ADDRESS TSO "FREE FI("WFDD")"                               /* @A5 */
  DROP WFREC. WFDD WFLGPRM                                    /* @A5 */
  if (cmd_rc > 0) then                                        /* @BF */
     CALL racfmsgs "ERR15" /* Generic failure */              /* @B6 */
RETURN                                                        /* @A5 */
/*--------------------------------------------------------------------*/
/*  Display RACF command                                         @AI  */
/*--------------------------------------------------------------------*/
SHOWCMD:                                                      /* @AI */
  IF (ERASHOW = "BOTH") | (ERASHOW = "DISPLAY") THEN DO       /* @BK */
     PARSE VAR CMD MSG1 60 MSG2 121 MSG3                      /* @AI */
     MSG4 = "Return code = "cmd_rc                            /* @AZ */
     "ADDPOP ROW(6) COLUMN(4)"                                /* @AV */
     "DISPLAY PANEL("PANELM2")"                               /* @AU */
     "REMPOP"                                                 /* @AV */
  END                                                         /* @BJ */
  IF (ERASHOW = "BOTH") | (ERASHOW = "LOG") THEN DO           /* @BK */
     zerrsm = "RACFADM RACFDSN  RC="cmd_rc                    /* @BJ */
     zerrlm = cmd                                             /* @BJ */
     'log msg(isrz003)'                                       /* @BJ */
  END                                                         /* @BJ */
RETURN                                                        /* @AI */
/*--------------------------------------------------------------------*/
/*  Create table                                                 @AL  */
/*--------------------------------------------------------------------*/
CREATE_TABLE:
  tbla = 'RCFDA'ZSCREEN
  "TBCREATE" tbla "KEYS(DATASET TYPE) REPLACE NOWRITE"
  cmd = "SEARCH FILTER("RFILTER") CLASS(DATASET)"             /* @AI */
  x = OUTTRAP('var.')
  address TSO cmd                                             /* @AI */
  cmd_rc = rc                                                 /* @AB */
  x = OUTTRAP('OFF')
  if (erashow <> 'NO') then                                   /* @BJ */
     call SHOWCMD                                             /* @AI */
  Do i = 1 to var.0
     temp = var.i
     /*---------------------------------------------*/
     /* Display number of records retrieved        -*/
     /*---------------------------------------------*/
     IF (ERASINT <> 0) THEN DO     /* Status interval */      /* @AD */
        IF (I//ERASINT = 0) THEN DO                           /* @AD */
           n1 = i; n2 = var.0
           "control display lock"
           "display msg(RACF013)"
        END                                                   /* @AD */
     END                                                      /* @AD */

     dataset = SUBWORD(temp,1,1)
     t       = INDEX(temp,g)
     if (t > 0) then
        type = 'GEN'
     else do
        type = 'DISCRETE'
        msgr = SUBWORD(temp,1,1)
        Select
           when (msgr = 'ICH31005I') then do
                dataset = 'NONE'     /* No datasets */
                type    = 'GEN'
           end
           when (msgr = 'ICH31009I') then do
                dataset = 'INVALID'  /* Bad filter  */
                call racfmsgs 'ERR08'                         /* @B6 */
           end
           when (msgr = 'ICH31012I') then do
                dataset = 'INVALID'  /* Bad filter  */
                call racfmsgs 'ERR08'                         /* @B6 */
           end
           when (msgr = 'ICH31014I') then do
                dataset = 'INVALID'  /* Bad filter  */
                call racfmsgs 'ERR08'                         /* @B6 */
           end
           when (msgr = 'ICH31016I') then do
                dataset = 'INVALID'  /* Bad filter  */
                call racfmsgs 'ERR08'                         /* @B6 */
           end
           when (msgr = 'ICH31017I') then do
                dataset = 'INVALID'  /* Bad filter  */
                call racfmsgs 'ERR08'                         /* @B6 */
           end
           when (msgr = 'ICH31018I') then do
                dataset = 'INVALID'  /* Bad filter  */
                call racfmsgs 'ERR08'                         /* @B6 */
           end
           when (msgr= 'IKJ56716I') then do
                dataset = 'INVALID'  /* Bad filter  */
                call racfmsgs 'ERR08'                         /* @B6 */
           end
           when (substr(msgr,1,6) = 'ICH310') then do
                type = ' '           /* Misc. errs  */
                call racfmsgs 'ERR09'                         /* @B6 */
           end
           otherwise nop
        End  /* Select */
     end  /* Else */
     "TBMOD" tbla
  end        /* Do i=1 to var.0 */
RETURN
