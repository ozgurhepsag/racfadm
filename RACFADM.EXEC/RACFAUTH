/*%NOCOMMENT====================* REXX *==============================*/
/*  PURPOSE:  RACFADM - Authorization - Menu option 6 (Hidden)        */
/*--------------------------------------------------------------------*/
/* FLG  YYMMDD  USERID   DESCRIPTION                                  */
/* ---  ------  -------  -------------------------------------------- */
/* @A6  200221  RACFA    Make 'ADDRESS ISPEXEC' defualt, reduce code  */
/* @A5  200220  RACFA    Fixed displaying all RACF commands           */
/* @A4  200220  RACFA    Added ERATRACE=YES, then TRACE R             */
/* @A3  200218  RACFA    Condense VGETs into one line                 */
/* @A2  200120  RACFA    Removed 'say msg.msg_var' in EXCMD procedure */
/* @A1  200119  RACFA    Standardized/reduced lines of code           */
/* @A0  011229  NICORIZ  Created REXX, V2.1, www.rizzuto.it           */
/*====================================================================*/
ADDRESS ISPEXEC                                               /* @A6 */
  Arg rclass profile user
  "VGET (ZSCREEN ERASHOW ERATRACE) ASIS"                      /* @A3 */
  If (eratrace = 'YES') then Trace r                          /* @A4 */

  address TSO "PROFILE MSGID"
  rlv    = SYSVAR('SYSLRACF')
  called = SYSVAR('SYSNEST')
  If (called = 'YES') then
     "CONTROL NONDISPL ENTER"
  "DISPLAY PANEL(RACFAUT1)" /* get prof */
  ret_code = rc
  Do while (ret_code = 0) /* While not end on panel   */
     ret_code = 8
     call get_prof_acl    /* get profile access list  */
     call get_user_group  /* get connected groups     */
     call Analyse         /* analyze and show diff.   */
     if (called <> 'YES') then do
        "DISPLAY PANEL(RACFAUT1)"
        ret_code = rc
     end
  end
RETURN 0
/*--------------------------------------------------------------------*/
/*  Display profile permits                                           */
/*--------------------------------------------------------------------*/
ANALYSE:
  seconds = time('S')
  tbla    = 'TB'ZSCREEN||SECONDS  /* make table name unique */
  "TBCREATE" TBLA "KEYS(ID) NAMES(ACC) REPLACE NOWRITE"
  do a = 1 to acl_ix
     id  = subword(acl.a,1,1)
     acc = subword(acl.a,2,1)
     do g = 1 to grp_ix
        if (id = subword(grp.g,1,1)) | (id = user) then
           "TBMOD" tbla
     end
  end
  /* Permit table display section */
  "TBSORT " tbla "FIELDS(ID)"
  "TBTOP  " tbla
  "TBDISPL" tbla "PANEL(RACFAUT2)"
  "TBEND  " tbla
RETURN
/*--------------------------------------------------------------------*/
/*  Get profile permits                                               */
/*--------------------------------------------------------------------*/
GET_PROF_ACL:
  flags   = 'OFF'
  audit   = ' '
  owner   = ' '
  uacc    = ' '
  data    = ' '
  warn    = ' '
  acl_ix  = 0
  if (type = 'DISCRETE') then
     type = ' '
  cmd = "RLIST "RCLASS PROFILE" AUTH"                         /* @A5 */
  if (erashow = 'YES') then                                   /* @A5 */
     call SHOWCMD                                             /* @A5 */
  x = OUTTRAP('VAR.')
  address TSO cmd                                             /* @A5 */
  x = OUTTRAP('OFF')
  if (type = ' ') then
     type = 'DISCRETE'
  Do i = 1 to var.0          /* Scan output */
     temp = var.i
     if (rlv > '1081') then   /* RACF 1.9 ADD BLANK */
        temp = ' 'temp
     l = LENGTH(temp)
     if (uacc = ' ') then
        if (substr(temp,2,12) = 'LEVEL  OWNER') then do
           i     = i + 2
           temp  = var.i
           owner = subword(temp,2,1)
           uacc  = subword(temp,3,1)
           warn  = subword(temp,5,1)
        end
     if (audit = ' ') then
        if (substr(temp,2,8) = 'AUDITING') then do
           i     = i + 2
           temp  = var.i
           audit = subword(temp,1,1)
        end
     if (data = ' ') then
        if (substr(temp,2,17) = 'INSTALLATION DATA') then do
           i    = i + 2
           temp = var.i
           data = temp
           i    = i + 1
           temp = var.i
           data = data || substr(temp,2)
        end
     if (flags = 'ON') then do
        if (l = 1) | (l= 2) then
           flags = 'OUT'     /* end of access list */
        if (l > 8) then
           if (substr(temp,1,9) = ' ') then
              flags = 'OUT'  /* end of access list */
     end
     if (flags = 'ON') then do
        if (substr(temp,2,10) = 'NO ENTRIES') then do
          id  = 'NONE'        /* empty access list */
          acc = 'DEFINED'
        end
        else do
           id  = subword(temp,1,1)
           acc = subword(temp,2,1)
        end
        acl_ix     = acl_ix+1  /* increase counter  */
        acl.acl_ix = id acc    /* store acl         */
     end
     if (substr(temp,1,17) = 'USER      ACCESS') then do
        flags = 'ON'      /* start of access list */
        i     = i + 1     /* skip */
     end
  end  /* Loop scan output */
RETURN
/*--------------------------------------------------------------------*/
/*  Get user group                                                    */
/*--------------------------------------------------------------------*/
GET_USER_GROUP:
  If (USER = 'NONE') then
     return
  flags  = 'OFF'
  grp_ix = 0
  cmd    = "LU "USER                                          /* @A5 */
  if (erashow = 'YES') then                                   /* @A5 */
     call SHOWCMD                                             /* @A5 */
  x = OUTTRAP('VAR.')
  address TSO cmd                                             /* @A5 */
  x = OUTTRAP('OFF')
  Do i = 1 to var.0               /* Scan output */
     temp = var.i
     if (substr(temp,3,5) = 'GROUP') then do
        id         = substr(temp,9,8)
        acc        = substr(temp,24,8)
        grp_ix     = grp_ix+1    /* increase counter */
        grp.grp_ix = id acc      /* store acl        */
     End
  End
RETURN
/*--------------------------------------------------------------------*/
/*  Error message                                                     */
/*--------------------------------------------------------------------*/
EMSG:
  Arg code
  rcflmsg = 'Reissue display to verify results of command'
  Select
     when (code = 'ERR01') then
          rcfsmsg = 'ADD PROFILE FAILED'
     when (code = 'ERR02') then
          rcfsmsg = 'DELETE PROFILE FAILED'
     when (code = 'ERR03') then
          rcfsmsg = 'PERMIT PROFILE FAILED'
     when (code = 'ERR04') then
          rcfsmsg = 'CHECK PERMIT RESULTS'
     when (code = 'ERR05') then
          rcfsmsg = 'PERMIT ADD FAILED'
     when (code = 'ERR06') then
          rcfsmsg = 'PERMIT DELETE FAILED'
     when (code = 'ERR07') then
          rcfsmsg = 'ALTER PROFILE FAILED'
     when (code = 'ERR08') then
          rcfsmsg = 'FILTER IS INVALID'
     when (code = 'ERR09') then
          rcfsmsg = 'ERROR IN SEARCH'
     when (code = 'ERR10') then
          rcfsmsg = 'COMMAND ERROR'
     when (code = 'ERR11') then
          rcfsmsg = 'DEFINE ALIAS ERROR'
     otherwise nop
  End  /* Select */
  "SETMSG MSG(RACF011)"
RETURN
/*--------------------------------------------------------------------*/
/*  Exec command                                                      */
/*--------------------------------------------------------------------*/
EXCMD:
  signal off error
  arg cmd
  if (erashow = 'YES') then                                   /* @A5 */
     call SHOWCMD                                             /* @A5 */
  x = OUTTRAP('msg.')
  address TSO ""cmd""
  ret_code = rc
  x = OUTTRAP('OFF')
  if (subword(msg.1,1,1)= 'cCH11009I') |,
     (subword(msg.1,1,1)= 'ICH10006I') |,
     (subword(msg.1,1,1)= 'ICH06011I') then
     raclist = 'YES'
  else
     msg_var = 1 to msg.0
RETURN
/*--------------------------------------------------------------------*/
/*  Display RACF command                                          @A5 */
/*--------------------------------------------------------------------*/
SHOWCMD:                                                      /* @A5 */
  PARSE VAR CMD MSG1 60 MSG2 121 MSG3                         /* @A5 */
  'ADDPOP ROW(6) COLUMN(4)'                                   /* @A5 */
  'DISPLAY PANEL(RACFMSG2)'                                   /* @A5 */
  'REMPOP'                                                    /* @A5 */
RETURN                                                        /* @A5 */
