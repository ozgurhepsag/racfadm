/*%NOCOMMENT====================* REXX *==============================*/
/*  PURPOSE:  RACFADM - Userid profiles - Menu option 1               */
/*--------------------------------------------------------------------*/
/* FLG  YYMMDD  USERID   DESCRIPTION                                  */
/* ---  ------  -------  -------------------------------------------- */
/* @CG  200305  RACFA    Added 'RESUME' prim. cmd, alias to RESET     */
/* @CF  200305  TRIDJK   Fix DELETE msgs for ISPPROF and TSOLIB       */
/* @CE  200304  RACFA    Update ATT field on panel, when updated      */
/* @CD  200304  RACFA    Del unnecessary double quotes                */
/* @CC  200303  RACFA    Del 'ret_code' lines for PANEL01... While    */
/* @CB  200303  RACFA    Chg 'ret_code = 0' to 'cmd_rc = rc'          */
/* @CA  200303  RACFA    Chg 'RL class ALL' to 'RL class * ALL'       */
/* @C9  200303  RACFA    Chk RC 'LG grp prms', if RC>0 then 'LU grp'  */
/* @C8  200303  RACFA    Fixed chking RC after executing command      */
/* @C7  200302  RACFA    Removed DO...END around code, not needed     */
/* @C6  200302  RACFA    Chk RC 'LU ID PRMS', if RC>0 then 'LU ID'    */
/* @C5  200301  RACFA    Check for 'NO ENTRIES MEET SEARCH CRITERIA'  */
/* @C4  200228  RACFA    Removed quote/commas, using PARSE ARG instead*/
/* @C3  200228  RACFA    Place single quotes around comma, prevent err*/
/* @C2  200228  RACFA    Added PASSWORD() to ADDUSER                  */
/* @C1  200228  RACFA    Removed ERAMCAT from VGET, not used          */
/* @BZ  200227  RACFA    Had to add "" for contuation to work properly*/
/* @BY  200227  RACFA    Fix continuation of statement                */
/* @BX  200227  TRIDJK   Fix for add and change (NONE/PROTECTED)      */
/* @BW  200227  RACFA    Added line command 'D', display user datasets*/
/* @BU  200226  RACFA    Fix @BS chg, chg ret_code to cmd_rc          */
/* @BT  200226  RACFA    Added 'CONTROL ERRORS RETURN'                */
/* @BS  200226  RACFA    Added 'Return Code =' when displaying cmd    */
/* @BR  200226  RACFA    Removed double quotes before/after cmd       */
/* @BQ  200226  RACFA    Place NO in TSO field                        */
/* @BP  200226  RACFA    Place NO in REVOKE field                     */
/* @BO  200226  RACFA    Fixed SORTing ATTR2, was ATTR, and added NO  */
/* @BN  200226  RACFA    Fixed ATTR color when sorting                */
/* @BM  200224  RACFA    Standardize quotes, chg single to double     */
/* @BL  200224  RACFA    Place panels at top of REXX in variables     */
/* @BK  200223  RACFA    Del 'address TSO "PROFILE MSGID"', not needed*/
/* @BJ  200223  RACFA    Simplified SORT, removed FLD/DFL_SORT vars   */
/* @BI  200222  RACFA    Allowing abbreviating the column in SORT cmd */
/* @BH  200222  RACFA    Removed translating OPTA/B, not needed       */
/* @BG  200222  RACFA    Allow placing cursor on row and press ENTER  */
/* @BF  200221  RACFA    Removed "G = '(G)'", not referenced          */
/* @BE  200221  LBD      Add ONLY primary command                     */
/* @BD  200221  RACFA    Display '*Search' to right of userid         */
/* @BC  200221  RACFA    Make 'ADDRESS ISPEXEC' defualt, reduce code  */
/* @BB  200220  RACFA    Fixed displaying all RACF commands           */
/* @BA  200220  RACFA    Added ERATRACE=YES, then TRACE R             */
/* @B9  200220  RACFA    Removed initializing ERASINT variable        */
/* @B8  200220  RACFA    Removed SE (Search) when general user (USR3) */
/* @B7  200220  RACFA    Added capability to browse/edit/view file    */
/* @B6  200220  RACFA    Removed SE (Search) from panel RACFUSR3      */
/* @B5  200220  RACFA    Chged REXX pgm name RACFTSO to RACFUSRT      */
/* @B4  200219  RACFA    Display SE (Search), was a hidden line cmd   */
/* @B3  200218  RACFA    Use dynamic area to display SELECT commands  */
/* @B2  200218  RACFA    Chged ERAADMN to YES/NO, was userid          */
/* @B1  200218  RACFA    Fixed ERAADMN, was ERAADMIN                  */
/* @AZ  200218  RACFA    Added 'Status Interval' option               */
/* @AY  200216  RACFA    Chg color to turq/green, was white/turq      */
/* @AX  200214  RACFA    Changed REXX pgm name RACFXREF to RACFUSRX   */
/* @AU  200206  RACFA    Fix color of sort col, when F3, diff. id     */
/* @AT  200206  RACFA    Fix SORT, place at top of table              */
/* @AS  200206  RACFA    Fix RESET, was not placing at top of table   */
/* @AR  200206  RACFA    Fix LOCATE, not working when sort descending */
/* @AQ  200205  TRIDJK   Allow A/D in SORT command                    */
/* @AP  200131  TRIDJK   Simulate irr* permanent user profiles        */
/* @AO  200131  TRIDJK   Fixed logon date for digital certicate logons*/
/* @AN  200126  TRIDJK   Chged yy.jjj to yy/mm/dd                     */
/* @AM  200123  RACFA    Retrieve default filter, Option 0 - Settings */
/* @AL  200123  TRIDJK   Add XR (cross reference report) line command */
/* @AK  200122  RACFA    Del TBTOP after selecting row, was chg @A7   */
/* @AJ  200122  TRIDJK   Test/del MFA option from 'LU userid' command */
/* @AI  200122  RACFA    Fixed displaying logon date                  */
/* @AH  200120  RACFA    Removed 'say msg.msg_var' in EXCMD procedure */
/* @AG  200120  RACFA    Fixed continuation issue                     */
/* @AF  200119  RACFA    Standardized/reduced lines of code           */
/* @AE  200119  RACFA    Added comment box above procedures           */
/* @AD  200119  RACFA    Fixed F3 (END) when adding/changing TSO user */
/* @AC  200118  RACFA    Added line command 'L', list group           */
/* @AB  200117  RACFA    Fixed attributes on Change/Add screens       */
/* @AA  200116  RACFA    Changed colors, White/Turq, was Turq/Blue    */
/* @A9  200115  RACFA    If id has attributes, place YES in 'Att' col */
/* @A8  200115  RACFA    Renamed variable WFLOCARG to LOCARG          */
/* @A7  200115  RACFA    Fixed sort/locate, multiple issues           */
/* @A6  200114  RACFA    Change the color for sorted column           */
/* @A5  200114  RACFA    Allow abbrev, locate on sorted column, reset */
/* @A4  200114  TRIDJK   Changed action (msg)                         */
/* @A3  200114  RACFA    Fixed SORT command thanks to John Kalinich   */
/* @A2  200113  RACFA    Add alloc/exec/free, instead of RACFLIST     */
/* @A1  200110  RACFA    Invoke RACFLIST when displaying a userid     */
/* @A0  011229  NICORIZ  Created REXX, V2.1, www.rizzuto.it           */
/*====================================================================*/
PANEL01 = "RACFUSR1"    /* Set filter, menu option 1       */ /* @BL */
PANEL02 = "RACFUSR2"    /* List userids (admin/user)       */ /* @BL */
PANEL03 = "RACFUSR3"    /* Show groups and access          */ /* @BL */
PANEL04 = "RACFUSR4"    /* Connect profile                 */ /* @BL */
PANEL05 = "RACFUSR5"    /* Change user                     */ /* @BL */
PANEL06 = "RACFUSR6"    /* Add user                        */ /* @BL */
PANEL07 = "RACFUSR7"    /* Change connection               */ /* @BL */
PANEL08 = "RACFUSR8"    /* Alter TSO segment               */ /* @BL */
PANELM2 = "RACFMSG2"    /* Execute RACF Command (pop-up)   */ /* @BL */

ADDRESS ISPEXEC                                               /* @BC */
  Arg Rfilter
  If (Rfilter = '') Then Do                                   /* @AM */
     "VGET (ERAFLTR) ASIS"                                    /* @AM */
     Rfilter = ERAFLTR                                        /* @AM */
  end                                                         /* @AM */
  Call Digital_Certs                                          /* @AP */
  Rclass = 'USER'
  lparm  =''                              /* Locate parm */   /* @A5 */
  "CONTROL ERRORS RETURN"                                     /* @B1 */
  "VGET (ZSCREEN ERASHOW ERATRACE ERAISPP",                   /* @CF */
        "ERAULIB ERAADMN ERASINT ERADISP) ASIS"               /* @B7 */
  If (eratrace = 'YES') then Trace r                          /* @BA */
  If (ERAADMN = "YES") then do                                /* @B2 */
      SELCMDS2 = "ÝS¨Show,ÝSE¨Srch,ÝL¨Lst,ÝD¨Dsn,"||,         /* @BW */
                 "ÝC¨Chg,ÝA¨Add,ÝR¨Rem,ÝRS¨Res,"||,           /* @BW */
                 "ÝRV¨Rev"                                    /* @BW */
      SELCMDS3 = "ÝS¨Show,ÝL¨List,ÝC¨Change,"||,              /* @B6 */
                 "ÝA¨Add,ÝR¨Remove"                           /* @B4 */
  end
  else do
      SELCMDS2 = "ÝS¨Show,ÝSE¨Search,ÝL¨list,ÝD¨Dsn"          /* @BW */
      SELCMDS3 = "ÝS¨Show,ÝL¨list"                            /* @B8 */
  end
  rlv       = SYSVAR('SYSLRACF')
  called    = SYSVAR('SYSNEST')
  if (called = 'YES') then
     "CONTROL NONDISPL ENTER"
  "DISPLAY PANEL("PANEL01")" /* get profile */                /* @BL */
  Do while (rc = 0)
     call Profl
     if (called <> 'YES') then
        "DISPLAY PANEL("PANEL01")"                            /* @BL */
  End
EXIT
/*--------------------------------------------------------------------*/
/*  Show all profiles for a filter                                    */
/*--------------------------------------------------------------------*/
PROFL:
  call create_table                                           /* @BE */
  if (USER = 'INVALID') | (USER = 'NO') THEN DO               /* @C5 */
     "TBEND" tbla
     call racfmsgs 'ERR16'                                    /* @C5 */
     return
  end
  /* profiles table display section */
  opta = ' '
  sort = 'USER,C,A'                                           /* @BJ */
  CLRUSER = "TURQ" ; CLRNAME = "GREEN"    /* Col. colors */   /* @AY */
  CLRDEFG = "GREEN"; CLRDATE = "GREEN"                        /* @AY */
  CLROWNE = "GREEN"; CLRREVO = "GREEN"                        /* @AY */
  CLRATTR = "GREEN"; CLRTSOU = "GREEN"                        /* @BJ */
  "TBSORT " tbla "FIELDS("sort")"
  "TBTOP  " tbla
  "TBDISPL" tbla "PANEL("PANEL02")"                           /* @BL */
  reta = rc
  do while (reta < 8)   /* tablea panel */
     "CONTROL DISPLAY SAVE"
     PARSE VAR ZCMD ZCMD PARM SEQ                             /* @AQ */
     lparm  = ""                                              /* @A7 */
     xtdtop = ztdtop                                          /* @AS */
     IF (SROW <> "") & (SROW <> 0) THEN                       /* @BG */
        IF (SROW > 0) THEN DO                                 /* @BG */
           "TBTOP " TBLA                                      /* @BG */
           "TBSKIP" TBLA "NUMBER("SROW")"                     /* @BG */
        END                                                   /* @BG */
     Select
        WHEN (ABBREV("SORT",ZCMD,1) = 1) THEN DO              /* @AT */
             xtdtop   = 1                                     /* @AT */
             if (seq = 'A') | (seq = 'D') then                /* @AU */
                nop                                           /* @AU */
             else                                             /* @AU */
                seq = 'A'                                     /* @AU */
             SELECT                                           /* @A5 */
                when (ABBREV("USERID",PARM,1) = 1) then       /* @BI */
                     sort = 'USER,C,'seq                      /* @BJ */
                when (ABBREV("NAME",PARM,1) = 1) then         /* @BI */
                     sort = 'NAME,C,'seq                      /* @BJ */
                when (ABBREV("GROUP",PARM,1) = 1) then        /* @BI */
                     sort = 'DEFGRP,C,'seq                    /* @BJ */
                when (ABBREV("LOGON",PARM,1) = 1) then        /* @BI */
                     sort = 'DATELGN,C,'seq                   /* @BJ */
                when (ABBREV("OWNER",PARM,1) = 1) then        /* @BI */
                     sort = 'OWNER,C,'seq                     /* @BJ */
                when (ABBREV("REV",PARM,1) = 1) then          /* @BI */
                     sort = 'REVOKED,C,'seq                   /* @BI */
                when (ABBREV("ATT",PARM,1) = 1) then          /* @BN */
                     sort = 'ATTR2,C,'seq                     /* @BO */
                when (ABBREV("TSO",PARM,1) = 1) then          /* @BI */
                     sort = 'TSOUSER,C,'seq                   /* @BJ */
                otherwise NOP                                 /* @A5 */
             END                                              /* @A5 */
        END                                                   /* @AT */
        WHEN (ABBREV("LOCATE",ZCMD,1) = 1) THEN               /* @A5 */
             lparm = parm                                     /* @A5 */
        WHEN (ABBREV("ONLY",ZCMD,1) = 1) THEN DO              /* @BE */
             find_str = translate(parm)                       /* @BE */
             'tbtop ' tbla                                    /* @BE */
             'tbskip' tbla                                    /* @BE */
             do forever                                       /* @BE */
                str = translate(user name defgrp owner attr2) /* @BO */
                if (pos(find_str,str) > 0) then nop           /* @BE */
                else 'tbdelete' tbla                          /* @BE */
                'tbskip' tbla                                 /* @BE */
                if (rc > 0) then do                           /* @BE */
                   'tbtop' tbla                               /* @BE */
                   leave                                      /* @BE */
                end                                           /* @BE */
             end                                              /* @BE */
         END                                                  /* @LB */
         WHEN (ABBREV("RESUME",ZCMD,1) = 1),                  /* @CG */
            | (ABBREV("RESET",ZCMD,1) = 1) THEN DO            /* @CG */
              sort = 'USER,C,A'                               /* @BJ */
              xtdtop   = 1                                    /* @AS */
              "TBEND" tbla                                    /* @BE */
              call create_table                               /* @BE */
         END                                                  /* @AS */
         otherwise lparm = ''
     End /* Select */
     ZCMD = ""; PARM = ""                                     /* @A5 */
     Select
        when (opta = 'A')  then call Addd
        when (opta = 'C')  then call Chgd
        when (opta = 'D')  then do                            /* @BW */
             "CONTROL DISPLAY SAVE"                           /* @BW */
             "SELECT PGM(ISRDSLST)",                          /* @BW */
                     "PARM(DSL '"user"')",                    /* @BW */
                     "SUSPEND SCRNAME(DSL)"                   /* @BW */
             "CONTROL DISPLAY RESTORE"                        /* @BW */
             action = '*Dsn'                                  /* @BW */
             "TBMOD" TBLA                                     /* @BW */
        end                                                   /* @BW */
        when (opta = 'L')  then call Lisd
        when (opta = 'R')  then call Deld
        when (opta = 'RS') then call Resd
        when (opta = 'RV') then call Revd
        when (opta = 'S')  then call Disd
        when (opta = 'SE') then do
             if (revoked <> 'YES') then call RACFCLSS user
             else call racfmsgs 'ERR12' /* user revoked */
             action = '*Search'                               /* @BD */
             "TBMOD" TBLA                                     /* @BD */
        end
        when (opta = 'XR') then call Xrefd                    /* @AL */
        otherwise nop
     End
     Do while (reta = 4)   /* process multi selection */
        "CONTROL DISPLAY RESTORE"
        "TBDISPL" tbla
        reta = rc
        "CONTROL DISPLAY SAVE"
        IF (SROW <> "") & (SROW <> 0) THEN                    /* @BG */
           IF (SROW > 0) THEN DO                              /* @BG */
              "TBTOP " TBLA                                   /* @BG */
              "TBSKIP" TBLA "NUMBER("SROW")"                  /* @BG */
           END                                                /* @BG */
        Select
           when (opta = 'A')  then call Addd
           when (opta = 'C')  then call Chgd
           when (opta = 'D')  then do                         /* @BW */
                "CONTROL DISPLAY SAVE"                        /* @BW */
                "SELECT PGM(ISRDSLST)",                       /* @BW */
                        "PARM(DSL '"user"')",                 /* @BW */
                        "SUSPEND SCRNAME(DSL)"                /* @BW */
                "CONTROL DISPLAY RESTORE"                     /* @BW */
                action = '*Dsn'                               /* @BW */
                "TBMOD" TBLA                                  /* @BW */
           end                                                /* @BW */
           when (opta = 'L')  then call Lisd
           when (opta = 'R')  then call Deld
           when (opta = 'RS') then call Resd
           when (opta = 'RV') then call Revd
           when (opta = 'S')  then call Disd
           when (opta = 'SE') then do
                if (revoked <> 'YES') then call RACFCLSS user
                else call racfmsgs 'ERR12' /* user revoked */
                action = '*Search'                            /* @BD */
                "TBMOD" TBLA                                  /* @BD */
           end
           when (opta = 'XR') then call Xrefd                 /* @AL */
           otherwise nop
        End
     end  /* Do while (reta < 4) */
     opta = ' '
     PARSE VAR SORT LOCARG "," .                              /* @BJ */
     CLRUSER = "GREEN"; CLRNAME = "GREEN"                     /* @AY */
     CLRDEFG = "GREEN"; CLRDATE = "GREEN"                     /* @AY */
     CLROWNE = "GREEN"; CLRREVO = "GREEN"                     /* @AY */
     CLRATTR = "GREEN"; CLRTSOU = "GREEN"                     /* @AY */
     INTERPRET "CLR"SUBSTR(LOCARG,1,4)" = 'TURQ'"             /* @AY */
     "TBSORT" tbla "FIELDS("sort")"
     "TBTOP " tbla
     if (lparm <> '') then do
        ASTERICK = "*"                                        /* @A5 */
        INTERPRET LOCARG" = lparm||ASTERICK"                  /* @A8 */
        PARSE VAR SORT . "," . "," SEQ                        /* @BJ */
        IF (SEQ = "D") THEN                                   /* @AR */
           CONDLIST = "LE"                                    /* @AR */
        ELSE                                                  /* @AR */
           CONDLIST = "GE"                                    /* @AR */
        "TBSCAN "tbla,                                        /* @A5 */
                "ARGLIST("LOCARG") CONDLIST("CONDLIST")"      /* @AR */
     end
     else
        "TBSKIP" tbla "NUMBER("XTDTOP")"
     "CONTROL DISPLAY RESTORE"
     "TBDISPL" tbla "PANEL("PANEL02")"                        /* @BL */
     reta = rc
  end  /* Do while (reta < 8) */
RETURN
/*--------------------------------------------------------------------*/
/*  Add new profile                                                   */
/*--------------------------------------------------------------------*/
ADDD:
  action = '*Added'                                           /* @A4 */
  new    = 'NO'
  if (USER = 'NONE') then
     new = 'YES'
  else
     CALL Getd
  "DISPLAY PANEL("PANEL06")"                                  /* @BL */
  if (RC = 0) & (tsouser = 'YES') then                        /* @AD */
     "DISPLAY PANEL("PANEL08")"                               /* @BL */
  if (rc > 0) then
     return
  xtr = ' '
  if (data <> ' ') then
     xtr = xtr "DATA('"data"')"
  datelgn = 'UNKNOWN'
  call EXCMD "ADDUSER ("user")",
             "OWN("owner") DFLTGRP("defgrp")",
             "NAME('"name"') PASSWORD("user")" XTR ATTR       /* @C2 */
  if (tsouser = 'YES') & (cmd_rc = 0) then DO                 /* @CB */
     ret_code = RACFUSRT('ADDD' user tsoproc,                 /* @C4 */
                tsoacct defgrp owner tsolib)                  /* @C4 */
     if (ret_code = 0) then DO
         call EXCMD "ALTUSER ("USER")",
             "OWN("owner") DFLTGRP("defgrp")",
             "NAME('"name"')" XTR ATTR,                       /* @CD */
             "TSO (ACCTNUM("tsoacct") PROC("tsoproc")",
             "SIZE("tsosize") UNIT("tsounit")"
     END
  END
  IF (cmd_rc > 0) then DO                                     /* @CA */
     CALL racfmsgs 'ERR01' /* Add DSD failed */
     return
  END

  if (attr <> "") THEN                                        /* @CE */
     ATTR2 = "YES"                                            /* @CE */
  ELSE                                                        /* @CE */
     ATTR2 = "NO"                                             /* @CE */
  "TBMOD" TBLA                                                /* @C7 */
  call resd /* Reset Password */                              /* @C7 */
  call disd /* Connect basic group */                         /* @C7 */

  IF (new = 'YES') THEN DO
     USER = 'NONE'
     "TBDELETE"  TBLA
  END
RETURN
/*--------------------------------------------------------------------*/
/*  Resume/reset userid                                               */
/*--------------------------------------------------------------------*/
RESD:
  action = '*Reset'                                           /* @A4 */
  msg    = 'You are about to resume/reset 'USER NAME
  Sure_? = RACFMSGC(msg)
  if (sure_? = 'YES') then do
     call EXCMD "ALTUSER "user" RESUME PASSWORD("user")"
     if (cmd_rc = 0) then do                                  /* @CA */
        revoked ='NO'                                         /* @BP */
        "TBMOD" TBLA
     end
     else
        CALL racfmsgs "ERR07" /* Alter failed */
  end
RETURN
/*--------------------------------------------------------------------*/
/*  Revoke userid                                                     */
/*--------------------------------------------------------------------*/
REVD:
  action = "*Revoke"                                          /* @A4 */
  msg    = 'You are about to revoke 'USER NAME
  Sure_? = RACFMSGC(msg)
  if (sure_? = 'YES') then do
     call EXCMD "ALTUSER "user" REVOKE"
     if (cmd_rc = 0) then do                                  /* @CA */
        revoked ='YES'
        "TBMOD" TBLA
     end
     else
        CALL racfmsgs "ERR07" /* Alter failed */
  end
RETURN
/*--------------------------------------------------------------------*/
/*  List userid                                                       */
/*--------------------------------------------------------------------*/
LISD:
  action  = '*Listed'                                         /* @A4 */
  WFDD    = "ERA"RANDOM(0,99999)                              /* @A2 */
  WFLUPRM = "CICS CSDATA DCE DFP EIM KERB LANGUAGE",          /* @A2 */
            "LNOTES MFA NDS NETVIEW OMVS OPERPARM",           /* @A2 */
            "OVM PROXY TSO WORKATTR"                          /* @A2 */
  call get_setropts_options                                   /* @AJ */
  if (rcvtsmfa = 'NO') then do                                /* @AJ */
     mfa_pos = pos('MFA',wfluprm)                             /* @AJ */
     wfluprm = delstr(wfluprm,mfa_pos,4)                      /* @AJ */
  end                                                         /* @AJ */
  cmd = "LU "USER WFLUPRM                                     /* @BB */
  X = OUTTRAP("WFREC.")                                       /* @A2 */
  ADDRESS TSO cmd                                             /* @BB */
  cmd_rc = rc                                                 /* @BS */
  if (erashow = 'YES') then                                   /* @BS */
     call SHOWCMD                                             /* @BS */
  X = OUTTRAP("OFF")                                          /* @A2 */
  IF (cmd_rc > 0) then DO    /* Removed parms */              /* @C6 */
     X = OUTTRAP("WFREC.")                                    /* @C6 */
     cmd = "LU "USER                                          /* @C6 */
     ADDRESS TSO cmd                                          /* @C6 */
     cmd_rc = rc                                              /* @C6 */
     X = OUTTRAP("OFF")                                       /* @C6 */
     if (erashow = 'YES') then                                /* @C6 */
        call SHOWCMD                                          /* @C6 */
  END                                                         /* @C6 */
  if (user = 'irrcerta') then do                              /* @AP */
     wfrec.  = ''                                             /* @AP */
     wfrec.0 = 3                                              /* @AP */
     wfrec.1 = irrcerta.1                                     /* @AP */
     wfrec.2 = irrcerta.3                                     /* @AP */
     wfrec.3 = irrcerta.6                                     /* @AP */
  end                                                         /* @AP */
  if (user = 'irrmulti') then do                              /* @AP */
     wfrec.  = ''                                             /* @AP */
     wfrec.0 = 3                                              /* @AP */
     wfrec.1 = irrmulti.1                                     /* @AP */
     wfrec.2 = irrmulti.3                                     /* @AP */
     wfrec.3 = irrmulti.6                                     /* @AP */
  end                                                         /* @AP */
  if (user = 'irrsitec') then do                              /* @AP */
     wfrec.  = ''                                             /* @AP */
     wfrec.0 = 3                                              /* @AP */
     wfrec.1 = irrsitec.1                                     /* @AP */
     wfrec.2 = irrsitec.3                                     /* @AP */
     wfrec.3 = irrsitec.6                                     /* @AP */
  end                                                         /* @AP */
  ADDRESS TSO "ALLOC F("WFDD") NEW REUSE",                    /* @A2 */
              "LRECL(132) BLKSIZE(0) RECFM(F B)",             /* @A2 */
              "UNIT(VIO) SPACE(1 5) CYLINDERS"                /* @A2 */
  ADDRESS TSO "EXECIO * DISKW "WFDD" (STEM WFREC. FINIS"      /* @A2 */
  "LMINIT DATAID(WFDATAID) DDNAME("WFDD")"                    /* @A2 */
  SELECT                                                      /* @B7 */
     WHEN (ERADISP = "VIEW") THEN                             /* @B7 */
          "VIEW DATAID("WFDATAID")"                           /* @B7 */
     WHEN (ERADISP = "EDIT") THEN                             /* @B7 */
          "EDIT DATAID("WFDATAID")"                           /* @B7 */
     OTHERWISE                                                /* @B7 */
          "BROWSE DATAID("WFDATAID")"                         /* @B7 */
  END                                                         /* @B7 */
  ADDRESS TSO "FREE FI("WFDD")"                               /* @A2 */
  DROP WFREC. WFDD WFLUPRM                                    /* @A2 */
  if (cmd_rc = 0) then                                        /* @C8 */
     "TBMOD" TBLA
  else
     CALL racfmsgs "ERR10" /* Generic failure */
RETURN
/*--------------------------------------------------------------------*/
/*  Get Multi Factor Authentication (MFA) option from RCVT            */
/*--------------------------------------------------------------------*/
GET_SETROPTS_OPTIONS:                                         /* @AJ */
  cvt     = c2x(storage(10,4))      /* cvt address        */  /* @AJ */
  cvtrac$ = d2x((x2d(cvt))+992)     /* cvt+3E0 = cvtrac $ */  /* @AJ */
  cvtrac  = c2x(storage(cvtrac$,4)) /* cvtrac=access cntl */  /* @AJ */
  rc      = setbool(rcvtsmfa,633,'02','NO','YES') /* mfa  */  /* @AJ */
RETURN                                                        /* @AJ */
/*--------------------------------------------------------------------*/
/*  Set boolean value for mask                                        */
/*--------------------------------------------------------------------*/
SETBOOL:
  variable = arg(1)                                           /* @AJ */
  offset   = arg(2)                                           /* @AJ */
  value    = arg(3)                                           /* @AJ */
  status1  = arg(4)                                           /* @AJ */
  status2  = arg(5)                                           /* @AJ */
  interpret  "rcvtsta$= d2x((x2d("cvtrac"))+"offset")"        /* @AJ */
  x        = storage(rcvtsta$,1)                              /* @AJ */
  interpret variable '= 'status1                              /* @AJ */
  interpret "x=bitand(x,'"value"'x)" /*remove bad bits*/      /* @AJ */
  interpret "if (x= '"value"'x) then "variable"="status2      /* @AJ */
RETURN 0                                                      /* @AJ */
/*--------------------------------------------------------------------*/
/*  List group                                                        */
/*--------------------------------------------------------------------*/
LISP:
  action  = '*Listed'                                         /* @AC */
  WFDD    = "ERA"RANDOM(0,99999)                              /* @AC */
  WFLGPRM = "CSDATA DFP OMVS OVM TME"                         /* @AC */
  cmd     = "LG "ID" "WFLGPRM                                 /* @BB */
  X = OUTTRAP("WFREC.")                                       /* @AC */
  ADDRESS TSO cmd                                             /* @BB */
  cmd_rc = rc                                                 /* @BS */
  X = OUTTRAP("OFF")                                          /* @AC */
  if (erashow = 'YES') then                                   /* @BB */
     call SHOWCMD                                             /* @BB */
  if (cmd_rc > 0) then do /* Remove Parms */                  /* @C9 */
     cmd     = "LG "ID                                        /* @C9 */
     X = OUTTRAP("WFREC.")                                    /* @C9 */
     ADDRESS TSO cmd                                          /* @C9 */
     cmd_rc = rc                                              /* @C9 */
     X = OUTTRAP("OFF")                                       /* @C9 */
     if (erashow = 'YES') then                                /* @C9 */
        call SHOWCMD                                          /* @C9 */
  END                                                         /* @C9 */
  ADDRESS TSO "ALLOC F("WFDD") NEW REUSE",                    /* @AC */
              "LRECL(132) BLKSIZE(0) RECFM(F B)",             /* @AC */
              "UNIT(VIO) SPACE(1 5) CYLINDERS"                /* @AC */
  ADDRESS TSO "EXECIO * DISKW "WFDD" (STEM WFREC. FINIS"      /* @AC */
  "LMINIT DATAID(WFDATAID) DDNAME("WFDD")"                    /* @AC */
  SELECT                                                      /* @B7 */
     WHEN (ERADISP = "VIEW") THEN                             /* @B7 */
          "VIEW DATAID("WFDATAID")"                           /* @B7 */
     WHEN (ERADISP = "EDIT") THEN                             /* @B7 */
          "EDIT DATAID("WFDATAID")"                           /* @B7 */
     OTHERWISE                                                /* @B7 */
          "BROWSE DATAID("WFDATAID")"                         /* @B7 */
  END                                                         /* @B7 */
  ADDRESS TSO "FREE FI("WFDD")"                               /* @AC */
  DROP WFREC. WFDD WFLGPRM                                    /* @AC */
  if (cmd_rc = 0) then                                        /* @C8 */
     "TBMOD" TBLB                                             /* @AC */
  else                                                        /* @AC */
     CALL racfmsgs "ERR10" /* Generic failure */              /* @AC */
RETURN                                                        /* @AC */
/*--------------------------------------------------------------------*/
/*  Change profile                                                    */
/*--------------------------------------------------------------------*/
CHGD:
  action      = "*Change"                                     /* @A4 */
  ret_code    = 0
  cmd_rc      = 0                                             /* @CA */
  New_tsouser = 'NO'
  if (USER= 'NONE') then
     return
  CALL Getd
  if (tsouser = 'YES') then DO
     "DISPLAY PANEL("PANEL05")"                               /* @BL */
     IF (RC = 0) THEN                                         /* @AD */
        "DISPLAY PANEL("PANEL08")"                            /* @BL */
  end
  else DO
     "DISPLAY PANEL("PANEL05")"                               /* @BL */
     if (rc = 0) & (tsouser = 'YES') then DO                  /* @AD */
        New_tsouser = 'YES'
        "DISPLAY PANEL("PANEL08")"                            /* @BL */
     end
  end
  if (rc > 0) then return
  Alt_own    = ' '
  Alt_defgrp = ' '
  Alt_name   = ' '
  xtr        = ' '
  if (owner <> ' ') then
     Alt_own = 'OWNER('owner')'
  if (defgrp <> ' ') then
     Alt_defgrp = 'DFLTGRP('defgrp')'
  if (name <> ' ') then
     Alt_name  = "NAME('"name"')"
  if (data <> ' ') then DO
     if (data = 'NONE') then
        data = ' '
     xtr = xtr "DATA('"DATA"')"
  end
  if (tsouser = 'YES') then do
      if (new_tsouser = 'YES') then
         ret_code = RACFUSRT('CHGD' user tsoproc,             /* @C4 */
                    tsoacct defgrp owner tsolib)              /* @C4 */
      if (ret_code = 0) then
         call EXCMD "ALTUSER ("USER")" alt_own,
                     alt_defgrp alt_name xtr attr,
             "TSO (ACCTNUM("tsoacct") PROC("tsoproc")",
             "SIZE("tsosize") UNIT("tsounit") "
  end
  else
     call EXCMD "ALTUSER ("USER")" alt_own,
                alt_defgrp alt_name xtr
  Select
     when (cmd_rc > 0) then                                   /* @CA */
          call racfmsgs 'ERR07' /* Altdsd failed */
     when (ret_code <> 0) then
          call racfmsgs 'ERR11' /* Defalias failed */
     otherwise
          "TBMOD" tbla
  End
RETURN
/*--------------------------------------------------------------------*/
/*  Delete profile                                                    */
/*--------------------------------------------------------------------*/
DELD:
  ACTION = "*Delete"                                           /* @A4 */
  if (USER = 'NONE') then
     return
  msg    = 'You are about to delete 'USER
  Sure_? = RACFMSGC(msg)
  if (sure_? = 'YES') then do
     if (tsouser = 'YES') then do
        msg    = user'.'eraispp                               /* @CF */
        if eraulib <> '' then                                 /* @CF */
        msg    = msg || ' and 'user'.'eraulib                 /* @CF */
        msg    = msg || ' will be deleted'                    /* @CF */
        Sure_? = RACFMSGC(msg)
        if (sure_? = 'YES') then
           ret_code = RACFUSRT('DELD' user tsoproc,           /* @C4 */
                      tsoacct defgrp owner tsolib)            /* @C4 */
        if (ret_code <= 8) then do
           call EXCMD "DELUSER ("USER")"
           if (cmd_rc = 0) then                               /* @CA */
              "TBDELETE" TBLA
           else CALL racfmsgs "ERR02" /* RDELETE failed */
        end
        else CALL racfmsgs "ERR02"   /* RDELETE failed */
     end
     else do
        call EXCMD "DELUSER ("USER")"
        if (cmd_rc = 0) then                                  /* @CA */
           "TBDELETE" TBLA
        else CALL racfmsgs "ERR02"   /* RDELETE failed */
     end
  end  /* Confirm-delete */
RETURN
/*--------------------------------------------------------------------*/
/*  Display profile permits                                           */
/*--------------------------------------------------------------------*/
DISD:
  action = '*Shown'                                           /* @A4 */
  "TBMOD" tbla

  if (USER = 'NONE') then
     return
  Do until (RB='NO')   /* allow rebuild option to loop */
     tblb = 'TB'ZSCREEN||SECONDS  /* table name unique */
     "TBCREATE" TBLB "KEYS(ID) NAMES(ACC)",
                     "REPLACE NOWRITE"
     flags = 'OFF'
     uacc  = ' '
     cmd   = "LU "USER                                        /* @BB */
     x = OUTTRAP('VAR.')
     address TSO cmd                                          /* @BB */
     cmd_rc = rc                                              /* @BS */
     x = OUTTRAP('OFF')
     if (erashow = 'YES') then                                /* @BB */
        call SHOWCMD                                          /* @BB */
     Do i = 1 to var.0  /* Scan output */
        temp = var.i
        if (substr(temp,3,5) = 'GROUP') then do
           id  = substr(temp,9,8)
           acc = substr(temp,24,8)
           "TBMOD" tblb
        end
     end
     /* Permit table display section */
     rb   = 'NO'
     optb = ' '
     "TBSORT " tblb "FIELDS(ID)"
     "TBTOP  " tblb
     "TBDISPL" tblb "PANEL("PANEL03")"                        /* @BL */
     retb = rc
     Do while (retb < 8)          /* tableb */
        "CONTROL DISPLAY SAVE"
        IF (SROW <> "") & (SROW <> 0) THEN                    /* @BG */
           IF (SROW > 0) THEN DO                              /* @BG */
              "TBTOP " TBLB                                   /* @BG */
              "TBSKIP" TBLB "NUMBER("SROW")"                  /* @BG */
           END                                                /* @BG */
        Select
           when (optb = 'A') then call Addp
           when (optb = 'C') then call Chgp
           when (optb = 'R') then call Delp
           when (optb = 'S') then call RACFGRP id
           otherwise nop
        End
        Do while (retb = 4) /* process multi-section */
           "CONTROL DISPLAY RESTORE"
           "TBDISPL" tblb
           retb = rc
           "CONTROL DISPLAY SAVE"
           Select
              when (optb = 'A') then call Addp
              when (optb = 'C') then call Chgp
              when (optb = 'R') then call Delp
              when (optb = 'L') then call Lisp                /* @AC */
              when (optb = 'S') then call RACFGRP id
              otherwise nop
           End
        end  /* While retb= 4 */
        optb = ' '
        "CONTROL DISPLAY RESTORE"
        "TBSORT" tblb "FIELDS(ID)"
        "TBTOP " tblb
        "TBSKIP" tblb "NUMBER("ZTDTOP")"
        if (rb = "YES") then
           retb = 12         /* rebuild table required */
        else do
           "TBDISPL" tblb "PANEL("PANEL03")"                  /* @BL */
           retb = rc
        end
     end  /* While retb< 8 */
     "TBEND" tblb
  end  /* Do until */
RETURN
/*--------------------------------------------------------------------*/
/*  Get user info to initialize add or change option                  */
/*--------------------------------------------------------------------*/
GETD:
  owner    = ' '
  name     = ' '
  defgrp   = ' '
  data     = ' '
  datecre  = ' '
  datelgn  = ' '
  datepass = ' '
  intpass  = ' '
  revoked  = 'NO'                                             /* @BP */
  attr     =''
  tsouser  =''
  cmd      = "LU "USER" TSO"                                  /* @BB */
  x        = OUTTRAP('details.')
  address TSO cmd                                             /* @BB */
  cmd_rc = rc                                                 /* @BS */
  x        = OUTTRAP('OFF')
  if (erashow = 'YES') then                                   /* @BB */
     call SHOWCMD                                             /* @BB */
  getd_max = details.0

  if (user = 'irrcerta') then do                              /* @AP */
     details.1 = irrcerta.1                                   /* @AP */
     details.3 = irrcerta.3                                   /* @AP */
     details.6 = irrcerta.6                                   /* @AP */
  end                                                         /* @AP */
  if (user = 'irrmulti') then do                              /* @AP */
     details.1 = irrmulti.1                                   /* @AP */
     details.3 = irrmulti.3                                   /* @AP */
     details.6 = irrmulti.6                                   /* @AP */
  end                                                         /* @AP */
  if (user = 'irrsitec') then do                              /* @AP */
      details.1 = irrsitec.1                                  /* @AP */
      details.3 = irrsitec.3                                  /* @AP */
      details.6 = irrsitec.6                                  /* @AP */
  end                                                         /* @AP */

  parse var details.1 ,
  'USER=' x 'NAME=' name 'OWNER=' owner 'CREATED=' datecre

  parse var details.2 ,
        'DEFAULT-GROUP=' defgrp 'PASSDATE=',
        datepass 'PASS-INTERVAL=' Intpass

  parse var details.3 'ATTRIBUTES='attribute1                 /* @AB */
  parse var details.4 'ATTRIBUTES='attribute2                 /* @AB */
  attr = STRIP(attribute1) STRIP(attribute2)                  /* @AB */
  rev  = POS('REVOKED',attr)
  if (rev <> 0) then do                                       /* @BX */
     revoked = 'YES'                                          /* @BX */
     attr = delstr(attr,rev,7)   /* Del 'REVOKED' */          /* @BX */
  end                                                         /* @BX */
  none  = POS('NONE',attr)                                    /* @A9 */
  if (none <> 0) then                                         /* @BX */
     attr = delstr(attr,none,4)  /* Del 'NONE'    */          /* @BX */
  attr2 = 'NO'                                                /* @BO */
  if (none = 0) then do                                       /* @A9 */
     attr2 = 'YES'                                            /* @AB */
  end                                                         /* @A9 */
  prot  = POS('PROTECTED',attr)                               /* @BX */
  if (prot <> 0) then attr = delstr(attr,prot,9)              /* @BX */

  parse var details.5 'LAST-ACCESS=' datelgn5                 /* @AI */
  parse var details.6 'LAST-ACCESS=' datelgn6                 /* @AI */
  Select                                                      /* @AI */
     When (datelgn5 <> "") Then                               /* @AI */
          datelgn = datelgn5                                  /* @AI */
     otherwise                                                /* @AI */
          datelgn = datelgn6                                  /* @AI */
  end                                                         /* @AI */
  if (datelgn = 'UNKNOW') then                                /* @AN */
     datelgn = 'UNKNOWN'                                      /* @AN */
  if (datelgn = " ") | (datelgn = 'UNKNOWN') then             /* @AO */
     nop                                                      /* @AO */
  else do                                                     /* @AR */
     datelgn = SUBSTR(datelgn,1,2)SUBSTR(datelgn,4,3)         /* @AN */
     datelgn = DATE('O',datelgn,'J')                          /* @AN */
  end                                                         /* @AN */

  parse var details.7 'INSTALLATION-DATA=' data
  TSOUSER = "NO"                                              /* @BQ */
  do getd_count=8 to getd_max
     if (details.getd_count = 'NO TSO INFORMATION') then leave
     if (details.getd_count = 'TSO INFORMATION') then do
        tsouser    ='YES'
        getd_count = getd_count+2
        parse var details.getd_count 'ACCTNUM=' tsoacct
        getd_count = getd_count+1
        parse var details.getd_count 'PROC=' tsoproc
        getd_count = getd_count+1
        parse var details.getd_count 'SIZE=' tsosize
        getd_count = getd_count+2
        parse var details.getd_count 'UNIT=' tsounit
        tsoacct    = strip(tsoacct)
        tsoproc    = strip(tsoproc)
        if (tsosize <> ' ') then tsosize = format(tsosize)
        tsounit = strip(tsounit)
        leave
     end  /* Tso-info */
  end  /* Do count */
RETURN
/*--------------------------------------------------------------------*/
/*  Change permit option                                              */
/*--------------------------------------------------------------------*/
CHGP:
  If (id = 'NONE') then
     return
  "DISPLAY PANEL("PANEL07")"                                  /* @BL */
  if (rc > 0) then
     return
  call EXCMD "PE "USER" CLASS("RCLASS") ID("ID")",
             "ACC("ACC")" TYPE
  if (cmd_rc = 0) then                                        /* @CA */
     "TBMOD" tblb
  else
     Call racfmsgs 'ERR03' /* permit failed */
RETURN
/*--------------------------------------------------------------------*/
/*  Add permit option                                                 */
/*--------------------------------------------------------------------*/
ADDP:
  new = 'NO'
  if (id = 'NONE') then
     new = 'YES'
  from = ' '
  "DISPLAY PANEL("PANEL04")"                                  /* @BL */
  if (rc > 0) then
     return
  idopt = ' '
  if (id <> ' ') then
     idopt = 'ID('ID') ACCESS('ACC')'
  fopt = ' '
  if (from <> ' ') then do
     fopt = "FROM('"FROM"') FCLASS("RCLASS") FGENERIC"
     rb   = 'YES'             /* Cause table rebuild */
  end
  call EXCMD "CONNECT ("user") GROUP("id") AUTH("acc")"
  if (cmd_rc = 0) then do                                     /* @CA */
     "TBMOD" tblb
     if (new = 'YES') then do
        id = 'NONE'
        "TBDELETE" tblb
     end
  end
  else do
     if (from <> ' ') then
        call racfmsgs 'ERR04' /* Permit Warning/Failed */
     else
        call racfmsgs 'ERR05' /* Permit Failed */
  end
RETURN
/*--------------------------------------------------------------------*/
/*  Delete permit option                                              */
/*--------------------------------------------------------------------*/
DELP:
  if (id = 'NONE') then
     return
  msg    = 'You are about to delete access for 'ID
  Sure_? = RACFMSGC(msg)
  if (sure_? = 'YES') then do
     call EXCMD "REMOVE ("user") GROUP("id")"
     if (cmd_rc = 0) then                                     /* @CA */
        "TBDELETE" tblb
     else
        call racfmsgs 'ERR06'     /* Permit Failed */
  end
RETURN
/*--------------------------------------------------------------------*/
/*  Exec command                                                      */
/*--------------------------------------------------------------------*/
EXCMD:
  signal off error
  arg cmd
  x = OUTTRAP('msg.')
  address TSO cmd                                             /* @BR */
  cmd_rc = rc                                                 /* @BS */
  x = OUTTRAP('OFF')
  if (erashow = 'YES') then                                   /* @BB */
     call SHOWCMD                                             /* @BB */
  if (subword(msg.1,1,1)= 'ICH11009I') |,
     (subword(msg.1,1,1)= 'ICH10006I') |,
     (subword(msg.1,1,1)= 'ICH06011I') then raclist = 'YES'
  else
     msg_var = 1 to msg.0
RETURN
/*--------------------------------------------------------------------*/
/*  Xref command                                                      */
/*--------------------------------------------------------------------*/
XREFD:                                                        /* @AL */
  Call RACFUSRX user                                          /* @AX */
RETURN                                                        /* @AL */
/*--------------------------------------------------------------------*/
/*  Simulate digital certificate user profiles                        */
/*--------------------------------------------------------------------*/
DIGITAL_CERTS:                                                /* @AP */
  irrcerta.  = ''
  irrmulti.  = ''
  irrsitec.  = ''

  irrcerta.1 = 'USER=irrcerta  NAME=CERTAUTH Anchor',         /* @AP */
               'OWNER=irrcerta  CREATED=99.195'               /* @AP */
  irrcerta.3 = ' ATTRIBUTES=REVOKED'                          /* @AP */
  irrcerta.6 = ' LAST-ACCESS=UNKNOWN'                         /* @AP */

  irrmulti.1 = 'USER=irrmulti  NAME=Criteria Anchor',         /* @AP */
               'OWNER=irrmulti  CREATED=99.195'               /* @AP */
  irrmulti.3 = ' ATTRIBUTES=REVOKED'                          /* @AP */
  irrmulti.6 = ' LAST-ACCESS=UNKNOWN'                         /* @AP */

  irrsitec.1 = 'USER=irrsitec  NAME=SITE Anchor',             /* @AP */
               'OWNER=irrsitec  CREATED=99.195'               /* @AP */
  irrsitec.3 = ' ATTRIBUTES=REVOKED'                          /* @AP */
  irrsitec.6 = ' LAST-ACCESS=UNKNOWN'                         /* @AP */
RETURN                                                        /* @AP */
/*--------------------------------------------------------------------*/
/*  Display RACF command                                          @BB */
/*--------------------------------------------------------------------*/
SHOWCMD:                                                      /* @BB */
  PARSE VAR CMD MSG1 60 MSG2 121 MSG3                         /* @BB */
  MSG4 = "Return code = "cmd_rc                               /* @BS */
  "ADDPOP ROW(6) COLUMN(4)"                                   /* @BB */
  "DISPLAY PANEL("PANELM2")"                                  /* @BL */
  "REMPOP"                                                    /* @BB */
RETURN                                                        /* @BB */
/*--------------------------------------------------------------------*/
/*  Create table                                                  @BE */
/*--------------------------------------------------------------------*/
CREATE_TABLE:                                                 /* @BE */
  action  = ''
  seconds = TIME('S')
  tbla    = 'TA'ZSCREEN||SECONDS  /* table name unique */
  "TBCREATE" tbla ,
       "KEYS(USER) NAMES(ACTION NAME OWNER DEFGRP DATELGN",
                        "REVOKED ATTR TSOUSER DATA ATTR2)",
                        "REPLACE NOWRITE"
  cmd = "SEARCH FILTER("RFILTER") CLASS("rclass")"            /* @BB */
  x = OUTTRAP('var.')
  address TSO cmd                                             /* @BB */
  cmd_rc = rc                                                 /* @BS */
  x = OUTTRAP('OFF')
  if (erashow = 'YES') then                                   /* @BB */
     call SHOWCMD                                             /* @BB */
  Do i = 1 to var.0
     temp = var.i
     USER = SUBWORD(temp,1,1)
     t    = INDEX(temp,g)
     if (t > 0) then nop
     else do
        msgr = SUBWORD(temp,1,1)
        Select
           when (msgr = 'ICH31005I') then do
                USER = 'NONE'        /* No USERs */
           end
           when (msgr = 'ICH31009I') then do
                USER = 'INVALID'     /* Bad filter */
                call racfmsgs 'ERR08'
           end
           when (msgr = 'ICH31012I') then do
                USER = 'INVALID'     /* Bad filter */
                call racfmsgs 'ERR08'
           end
           when (msgr = 'ICH31014I') then do
                USER = 'INVALID'     /* Bad filter */
                call racfmsgs 'ERR08'
           end
           when (msgr = 'ICH31016I') then do
                USER = 'INVALID'     /* Bad filter */
                call racfmsgs 'ERR08'
           end
           when (msgr = 'ICH31017I') then do
                USER = 'INVALID'     /* Bad filter */
                call racfmsgs 'ERR08'
           end
           when (msgr = 'ICH31018I') then do
                USER = 'INVALID'     /* Bad filter */
                call racfmsgs 'ERR08'
           end
           when (msgr = 'IKJ56716I') then do
                USER = 'INVALID'     /* Bad filter */
                call racfmsgs 'ERR08'
           end
           when (substr(msgr,1,6) = 'ICH310') then do
                call racfmsgs 'ERR09'
           end
           otherwise nop
        End  /* Select */
     end  /* Else */
     /*---------------------------------------------*/
     /* Display number of users retrieved          -*/
     /*---------------------------------------------*/
     IF (ERASINT <> 0) THEN DO     /* Status interval */      /* @AZ */
        IF (I//ERASINT = 0) THEN DO                           /* @AZ */
           n1 = i; n2 = var.0
           "control display lock"
           "display msg(RACF013)"
        END                                                   /* @AZ */
     END                                                      /* @AZ */
     /*---------------------------------------------*/
     /* Get further info                           -*/
     /*---------------------------------------------*/
     call GETD
     "TBMOD" tbla
  end  /* Do i=1 to var.0 */
RETURN                                                        /* @BE */
